{"ast":null,"code":"var _jsxFileName = \"D:\\\\LaiOfferProjects\\\\starlink\\\\starlink\\\\src\\\\components\\\\SatelliteList.js\";\nimport React, { Component } from 'react';\nimport { Button, Spin, Avatar, List, Checkbox } from \"antd\";\nimport satellite from \"../assets/images/satellite.svg\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass SatelliteList extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      selected: []\n    };\n\n    this.onChange = e => {\n      // 1. get active set info (satellite) + get active status (check/uncheck)\n      const {\n        dataInfo,\n        checked\n      } = e.target; // 2. add to or remove from the current set array\n\n      const {\n        selected\n      } = this.state;\n      const list = this.addOrRemove(dataInfo, checked, selected); // 3. set the state of selected satellites\n\n      this.setState({\n        selected: list\n      });\n    };\n\n    this.addOrRemove = (item, status, list) => {\n      // check the checkbox status and whether the item is in the list or not\n      const found = list.some(entry => entry.satid === item.satid);\n\n      if (!found && status) {\n        list = [...list, item];\n      }\n\n      if (found && !status) {\n        list = list.filter(entry => entry.satid !== item.satid);\n      }\n\n      console.log(list);\n      return list;\n    };\n  }\n\n  render() {\n    const {\n      isLoad\n    } = this.props;\n    const satList = this.props.satInfo ? this.props.satInfo.above : [];\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sat-list-box\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"btn-container\",\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          className: \"sat-list-btn\",\n          type: \"primary\",\n          children: \"Track\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this), isLoad ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"spin-box\",\n        children: /*#__PURE__*/_jsxDEV(Spin, {\n          tip: \"Loading\",\n          size: \"large\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 25\n      }, this) : /*#__PURE__*/_jsxDEV(List, {\n        itemLayout: \"horizontal\",\n        className: \"sat-list\",\n        dataSource: satList,\n        renderItem: item => /*#__PURE__*/_jsxDEV(List.Item, {\n          actions: [/*#__PURE__*/_jsxDEV(Checkbox, {\n            dataInfo: item,\n            onChange: this.onChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 49\n          }, this)],\n          children: /*#__PURE__*/_jsxDEV(List.Item.Meta, {\n            avatar: /*#__PURE__*/_jsxDEV(Avatar, {\n              size: 50,\n              src: satellite\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 55\n            }, this),\n            title: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: item.satname\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 54\n            }, this),\n            description: `Launch Date: ${item.launchDate}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 43\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 35\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default SatelliteList;","map":{"version":3,"names":["React","Component","Button","Spin","Avatar","List","Checkbox","satellite","SatelliteList","state","selected","onChange","e","dataInfo","checked","target","list","addOrRemove","setState","item","status","found","some","entry","satid","filter","console","log","render","isLoad","props","satList","satInfo","above","satname","launchDate"],"sources":["D:/LaiOfferProjects/starlink/starlink/src/components/SatelliteList.js"],"sourcesContent":["import React, {Component} from 'react';\r\nimport {Button, Spin, Avatar, List, Checkbox} from \"antd\";\r\nimport satellite from \"../assets/images/satellite.svg\";\r\nclass SatelliteList extends Component {\r\n    state = {\r\n        selected: []\r\n    }\r\n\r\n    onChange = e => {\r\n        // 1. get active set info (satellite) + get active status (check/uncheck)\r\n        const { dataInfo, checked } = e.target;\r\n        // 2. add to or remove from the current set array\r\n        const { selected } = this.state;\r\n        const list = this.addOrRemove(dataInfo, checked, selected);\r\n        // 3. set the state of selected satellites\r\n        this.setState( {selected: list})\r\n    }\r\n\r\n    addOrRemove = ( item, status, list ) => {\r\n        // check the checkbox status and whether the item is in the list or not\r\n        const found = list.some( entry => entry.satid === item.satid);\r\n        if (!found && status) {\r\n            list = [...list, item];\r\n        }\r\n        if (found && !status) {\r\n            list = list.filter( entry => entry.satid !== item.satid);\r\n        }\r\n        console.log(list);\r\n        return list;\r\n    }\r\n    \r\n    render() {\r\n        const { isLoad } = this.props;\r\n        const satList = this.props.satInfo ? this.props.satInfo.above : [];\r\n\r\n        return (\r\n            <div className=\"sat-list-box\">\r\n                <div className=\"btn-container\">\r\n                    <Button className=\"sat-list-btn\"\r\n                            type=\"primary\">Track</Button>\r\n                    <hr/>\r\n                </div>\r\n\r\n                {\r\n                    isLoad\r\n                        ?\r\n                        <div className=\"spin-box\">\r\n                            <Spin tip=\"Loading\" size=\"large\"/>\r\n                        </div>\r\n                        :\r\n                        <List itemLayout=\"horizontal\"\r\n                              className=\"sat-list\"\r\n                              dataSource={satList}\r\n                              renderItem={(item) => (\r\n                                  <List.Item\r\n                                      actions={[<Checkbox dataInfo={item}\r\n                                                          onChange={this.onChange}/>]}\r\n                                      >\r\n                                          <List.Item.Meta\r\n                                              avatar={<Avatar size={50} src={satellite} />}\r\n                                              title={<p>{item.satname}</p>}\r\n                                              description={`Launch Date: ${item.launchDate}`}\r\n                                          />\r\n                                  </List.Item>\r\n                              )}\r\n                        />\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default SatelliteList;"],"mappings":"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"},"metadata":{},"sourceType":"module"}