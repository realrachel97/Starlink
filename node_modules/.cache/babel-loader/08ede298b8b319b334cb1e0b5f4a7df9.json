{"ast":null,"code":"import _classCallCheck from\"D:/LaiOfferProjects/starlink/starlink/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";import _createClass from\"D:/LaiOfferProjects/starlink/starlink/node_modules/@babel/runtime/helpers/esm/createClass.js\";import _inherits from\"D:/LaiOfferProjects/starlink/starlink/node_modules/@babel/runtime/helpers/esm/inherits.js\";import _createSuper from\"D:/LaiOfferProjects/starlink/starlink/node_modules/@babel/runtime/helpers/esm/createSuper.js\";import React,{Component,createRef}from'react';import{feature}from'topojson-client';import axios from'axios';import{geoKavrayskiy7}from'd3-geo-projection';import{geoGraticule,geoPath}from'd3-geo';import{select as d3Select}from'd3-selection';import*as d3Scale from\"d3-scale\";import{timeFormat as d3TimeFormat}from\"d3-time-format\";import{schemeCategory10}from\"d3-scale-chromatic\";import{WORLD_MAP_URL,SATELLITE_POSITION_URL,SAT_API_KEY}from\"../constants\";import{Spin}from\"antd\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var width=960;var height=600;var WorldMap=/*#__PURE__*/function(_Component){_inherits(WorldMap,_Component);var _super=_createSuper(WorldMap);function WorldMap(){var _this;_classCallCheck(this,WorldMap);_this=_super.call(this);_this.track=function(data){if(!data[0].hasOwnProperty(\"positions\")){throw new Error(\"no position data\");return;}var len=data[0].positions.length;var duration=_this.props.observerData.duration;var context2=_this.map.context2;// current time\nvar now=new Date();var i=0;var timer=setInterval(function(){// current time\nvar ct=new Date();// i represent which one it is\nvar timePassed=i===0?0:ct-now;var time=new Date(now.getTime()+60*timePassed);context2.clearRect(0,0,width,height);context2.font=\"bold 14px sans-serif\";context2.fillStyle=\"#333\";context2.textAlign=\"center\";context2.fillText(d3TimeFormat(time),width/2,10);if(i>=len){clearInterval(timer);_this.setState({isDrawing:false});var oHint=document.getElementsByClassName(\"hint\")[0];oHint.innerHTML=\"\";return;}data.forEach(function(sat){var info=sat.info,positions=sat.positions;_this.drawSat(info,positions[i]);});i+=60;},1000);};_this.drawSat=function(sat,pos){var satlongitude=pos.satlongitude,satlatitude=pos.satlatitude;if(!satlongitude||!satlatitude)return;var satname=sat.satname;// we only need the satellite number\n// \\d+: we need the digits\n// join: turn an array into a string\n// /g: all\nvar nameWithNumber=satname.match(/\\d+/g).join(\"\");var _this$map=_this.map,projection=_this$map.projection,context2=_this$map.context2;// the exact point position on the world map (from longitude & latitude to where need to be located)\nvar xy=projection([satlongitude,satlatitude]);context2.fillStyle=_this.color(nameWithNumber);context2.beginPath();// draw round\ncontext2.arc(xy[0],xy[1],4,0,2*Math.PI);context2.fill();context2.font=\"bold 11px sans-serif\";context2.textAlign=\"center\";context2.fillText(nameWithNumber,xy[0],xy[1]+14);};_this.generateMap=function(land){var projection=geoKavrayskiy7().scale(170).translate([width/2,height/2]).precision(.1);var graticule=geoGraticule();var canvas1=d3Select(_this.refMap.current).attr(\"width\",width).attr(\"height\",height);var canvas2=d3Select(_this.refTrack.current).attr(\"width\",width).attr(\"height\",height);var context1=canvas1.node().getContext(\"2d\");var context2=canvas2.node().getContext(\"2d\");var path=geoPath().projection(projection).context(context1);land.forEach(function(ele){context1.fillStyle='#B3DDEF';context1.strokeStyle='#000';context1.globalAlpha=0.7;context1.beginPath();path(ele);context1.fill();context1.stroke();context1.strokeStyle='rgba(220, 220, 220, 0.1)';context1.beginPath();path(graticule());context1.lineWidth=0.1;context1.stroke();context1.beginPath();context1.lineWidth=0.5;path(graticule.outline());context1.stroke();});_this.map={projection:projection,graticule:graticule,context1:context1,context2:context2};};_this.state={isLoading:false,isDrawing:false};_this.map=null;_this.color=d3Scale.scaleOrdinal(schemeCategory10);_this.refTrack=/*#__PURE__*/createRef();_this.refMap=/*#__PURE__*/React.createRef();return _this;}_createClass(WorldMap,[{key:\"componentDidMount\",value:function componentDidMount(){var _this2=this;axios.get(WORLD_MAP_URL).then(function(res){var data=res.data;// transform topjson to d3 data\nvar land=feature(data,data.objects.countries).features;_this2.generateMap(land);}).catch(function(e){return console.log('err in fecth world map data ',e);});}},{key:\"componentDidUpdate\",value:function componentDidUpdate(prevProps,prevState,snapshot){var _this3=this;if(prevProps.satData!==this.props.satData){var _this$props$observerD=this.props.observerData,latitude=_this$props$observerD.latitude,longitude=_this$props$observerD.longitude,elevation=_this$props$observerD.elevation,altitude=_this$props$observerD.altitude,duration=_this$props$observerD.duration;var endTime=duration*60;this.setState({isLoading:true});var urls=this.props.satData.map(function(sat){var satid=sat.satid;var url=\"/api/\".concat(SATELLITE_POSITION_URL,\"/\").concat(satid,\"/\").concat(latitude,\"/\").concat(longitude,\"/\").concat(elevation,\"/\").concat(endTime,\"/&apiKey=\").concat(SAT_API_KEY);return axios.get(url);});// ensure the satellite list is in order\nPromise.all(urls).then(function(res){var arr=res.map(function(sat){return sat.data;});_this3.setState({isLoading:false,isDrawing:true});if(!prevState.isDrawing){_this3.track(arr);}else{var oHint=document.getElementsByClassName(\"hint\")[0];oHint.innerHTML=\"Please wait for these satellite animation to finish before selection new ones!\";}}).catch(function(e){console.log(\"err in fetch satellite position -> \",e.message);_this3.setState({isLoading:false});});}}},{key:\"render\",value:function render(){var isLoading=this.state.isLoading;return/*#__PURE__*/_jsxs(\"div\",{className:\"map-box\",children:[isLoading?/*#__PURE__*/_jsx(\"div\",{className:\"spinner\",children:/*#__PURE__*/_jsx(Spin,{tip:\"Loading...\",size:\"large\"})}):null,/*#__PURE__*/_jsx(\"canvas\",{className:\"map\",ref:this.refMap}),/*#__PURE__*/_jsx(\"canvas\",{className:\"track\",ref:this.refTrack})]});}}]);return WorldMap;}(Component);export default WorldMap;","map":{"version":3,"names":["React","Component","createRef","feature","axios","geoKavrayskiy7","geoGraticule","geoPath","select","d3Select","d3Scale","timeFormat","d3TimeFormat","schemeCategory10","WORLD_MAP_URL","SATELLITE_POSITION_URL","SAT_API_KEY","Spin","width","height","WorldMap","track","data","hasOwnProperty","Error","len","positions","length","duration","props","observerData","context2","map","now","Date","i","timer","setInterval","ct","timePassed","time","getTime","clearRect","font","fillStyle","textAlign","fillText","clearInterval","setState","isDrawing","oHint","document","getElementsByClassName","innerHTML","forEach","sat","info","drawSat","pos","satlongitude","satlatitude","satname","nameWithNumber","match","join","projection","xy","color","beginPath","arc","Math","PI","fill","generateMap","land","scale","translate","precision","graticule","canvas1","refMap","current","attr","canvas2","refTrack","context1","node","getContext","path","context","ele","strokeStyle","globalAlpha","stroke","lineWidth","outline","state","isLoading","scaleOrdinal","get","then","res","objects","countries","features","catch","e","console","log","prevProps","prevState","snapshot","satData","latitude","longitude","elevation","altitude","endTime","urls","satid","url","Promise","all","arr","message"],"sources":["D:/LaiOfferProjects/starlink/starlink/src/components/WorldMap.js"],"sourcesContent":["import React, {Component, createRef} from 'react';\r\nimport { feature } from 'topojson-client';\r\nimport axios from 'axios';\r\nimport { geoKavrayskiy7 } from 'd3-geo-projection';\r\nimport { geoGraticule, geoPath } from 'd3-geo';\r\nimport { select as d3Select } from 'd3-selection';\r\nimport * as d3Scale from \"d3-scale\";\r\nimport { timeFormat as d3TimeFormat } from \"d3-time-format\";\r\nimport { schemeCategory10 } from \"d3-scale-chromatic\";\r\nimport { WORLD_MAP_URL, SATELLITE_POSITION_URL, SAT_API_KEY } from \"../constants\";\r\nimport {Spin} from \"antd\";\r\n\r\nconst width = 960;\r\nconst height = 600;\r\n\r\nclass WorldMap extends Component {\r\n    constructor(){\r\n        super();\r\n        this.state = {\r\n            isLoading: false,\r\n            isDrawing: false\r\n        }\r\n        this.map = null;\r\n        this.color = d3Scale.scaleOrdinal(schemeCategory10);\r\n        this.refTrack = createRef();\r\n        this.refMap = React.createRef();\r\n    }\r\n\r\n    componentDidMount() {\r\n        axios.get(WORLD_MAP_URL)\r\n            .then(res => {\r\n                const { data } = res;\r\n                // transform topjson to d3 data\r\n                const land = feature(data, data.objects.countries).features;\r\n                this.generateMap(land);\r\n            })\r\n            .catch(e => console.log('err in fecth world map data ', e))\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if (prevProps.satData !== this.props.satData) {\r\n            const {\r\n                latitude,\r\n                longitude,\r\n                elevation,\r\n                altitude,\r\n                duration\r\n            } = this.props.observerData;\r\n\r\n            const endTime = duration * 60;\r\n\r\n            this.setState({\r\n                isLoading: true\r\n            });\r\n\r\n            const urls = this.props.satData.map( sat => {\r\n                const { satid } = sat;\r\n                const url =\r\n                    `/api/${SATELLITE_POSITION_URL}/${satid}/${latitude}/${longitude}/${elevation}/${endTime}/&apiKey=${SAT_API_KEY}`;\r\n                return axios.get(url);\r\n            })\r\n\r\n            // ensure the satellite list is in order\r\n            Promise.all(urls)\r\n                .then(res => {\r\n                    const arr = res.map(sat => sat.data);\r\n                    this.setState({\r\n                        isLoading: false,\r\n                        isDrawing: true\r\n                    });\r\n\r\n                    if (!prevState.isDrawing) {\r\n                        this.track(arr);\r\n                    } else {\r\n                        const oHint = document.getElementsByClassName(\"hint\")[0];\r\n                        oHint.innerHTML =\r\n                            \"Please wait for these satellite animation to finish before selection new ones!\";\r\n                    }\r\n                })\r\n                .catch(e => {\r\n                    console.log(\"err in fetch satellite position -> \", e.message);\r\n                    this.setState({isLoading: false})\r\n                });\r\n        }\r\n    }\r\n\r\n    track = data => {\r\n        if (!data[0].hasOwnProperty(\"positions\")) {\r\n            throw new Error(\"no position data\");\r\n            return;\r\n        }\r\n\r\n        const len = data[0].positions.length;\r\n        const { duration } = this.props.observerData;\r\n        const { context2 } = this.map;\r\n\r\n        // current time\r\n        let now = new Date();\r\n\r\n        let i = 0;\r\n\r\n        let timer = setInterval(() => {\r\n            // current time\r\n            let ct = new Date();\r\n            // i represent which one it is\r\n            let timePassed = i === 0 ? 0 : ct - now;\r\n            let time = new Date(now.getTime() + 60 * timePassed);\r\n\r\n            context2.clearRect(0, 0, width, height);\r\n\r\n            context2.font = \"bold 14px sans-serif\";\r\n            context2.fillStyle = \"#333\";\r\n            context2.textAlign = \"center\";\r\n            context2.fillText(d3TimeFormat(time), width / 2, 10);\r\n\r\n            if (i >= len) {\r\n                clearInterval(timer);\r\n                this.setState({ isDrawing: false });\r\n                const oHint = document.getElementsByClassName(\"hint\")[0];\r\n                oHint.innerHTML = \"\";\r\n                return;\r\n            }\r\n\r\n            data.forEach(sat => {\r\n                const { info, positions } = sat;\r\n                this.drawSat(info, positions[i]);\r\n            });\r\n\r\n            i += 60;\r\n        }, 1000);\r\n    };\r\n\r\n    drawSat = (sat, pos) => {\r\n        const { satlongitude, satlatitude } = pos;\r\n\r\n        if (!satlongitude || !satlatitude) return;\r\n\r\n        const { satname } = sat;\r\n        // we only need the satellite number\r\n        // \\d+: we need the digits\r\n        // join: turn an array into a string\r\n        // /g: all\r\n        const nameWithNumber = satname.match(/\\d+/g).join(\"\");\r\n\r\n        const { projection, context2 } = this.map;\r\n        // the exact point position on the world map (from longitude & latitude to where need to be located)\r\n        const xy = projection([satlongitude, satlatitude]);\r\n\r\n        context2.fillStyle = this.color(nameWithNumber);\r\n        context2.beginPath();\r\n        // draw round\r\n        context2.arc(xy[0], xy[1], 4, 0, 2 * Math.PI);\r\n        context2.fill();\r\n\r\n        context2.font = \"bold 11px sans-serif\";\r\n        context2.textAlign = \"center\";\r\n        context2.fillText(nameWithNumber, xy[0], xy[1] + 14);\r\n    };\r\n\r\n    render() {\r\n        const { isLoading } = this.state;\r\n        return (\r\n            <div className=\"map-box\">\r\n                {\r\n                    isLoading ? (\r\n                            <div className=\"spinner\">\r\n                                <Spin tip=\"Loading...\" size=\"large\"/>\r\n                            </div>\r\n                        ) : null\r\n                }\r\n                <canvas className=\"map\" ref={this.refMap} />\r\n                <canvas className=\"track\" ref={this.refTrack}/>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    generateMap = land => {\r\n        const projection = geoKavrayskiy7()\r\n            .scale(170)\r\n            .translate([width / 2, height / 2])\r\n            .precision(.1);\r\n\r\n        const graticule = geoGraticule();\r\n\r\n        const canvas1 = d3Select(this.refMap.current)\r\n            .attr(\"width\", width)\r\n            .attr(\"height\", height);\r\n\r\n        const canvas2 = d3Select(this.refTrack.current)\r\n            .attr(\"width\", width)\r\n            .attr(\"height\", height);\r\n\r\n        let context1 = canvas1.node().getContext(\"2d\");\r\n        let context2 = canvas2.node().getContext(\"2d\");\r\n\r\n        let path = geoPath()\r\n            .projection(projection)\r\n            .context(context1);\r\n\r\n        land.forEach(ele => {\r\n            context1.fillStyle = '#B3DDEF';\r\n            context1.strokeStyle = '#000';\r\n            context1.globalAlpha = 0.7;\r\n            context1.beginPath();\r\n            path(ele);\r\n            context1.fill();\r\n            context1.stroke();\r\n\r\n            context1.strokeStyle = 'rgba(220, 220, 220, 0.1)';\r\n            context1.beginPath();\r\n            path(graticule());\r\n            context1.lineWidth = 0.1;\r\n            context1.stroke();\r\n\r\n            context1.beginPath();\r\n            context1.lineWidth = 0.5;\r\n            path(graticule.outline());\r\n            context1.stroke();\r\n        })\r\n\r\n        this.map = {\r\n            projection: projection,\r\n            graticule: graticule,\r\n            context1: context1,\r\n            context2: context2\r\n        }\r\n    }\r\n}\r\n\r\nexport default WorldMap;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}