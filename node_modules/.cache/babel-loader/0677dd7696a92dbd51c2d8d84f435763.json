{"ast":null,"code":"var _jsxFileName = \"D:\\\\LaiOfferProjects\\\\starlink\\\\starlink\\\\src\\\\components\\\\WorldMap.js\";\nimport React, { Component, createRef } from 'react';\nimport { feature } from 'topojson-client';\nimport axios from 'axios';\nimport { geoKavrayskiy7 } from 'd3-geo-projection';\nimport { geoGraticule, geoPath } from 'd3-geo';\nimport { select as d3Select } from 'd3-selection';\nimport * as d3Scale from \"d3-scale\";\nimport { timeFormat as d3TimeFormat } from \"d3-time-format\";\nimport { schemeCategory10 } from \"d3-scale-chromatic\";\nimport { WORLD_MAP_URL, SATELLITE_POSITION_URL, SAT_API_KEY } from \"../constants\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst width = 960;\nconst height = 600;\n\nclass WorldMap extends Component {\n  constructor() {\n    super();\n    this.state = {};\n    this.map = null;\n    this.color = d3Scale.scaleOrdinal(schemeCategory10);\n    this.refTrack = /*#__PURE__*/createRef();\n    this.refMap = /*#__PURE__*/React.createRef();\n  }\n\n  componentDidMount() {\n    axios.get(WORLD_MAP_URL).then(res => {\n      const {\n        data\n      } = res;\n      const land = feature(data, data.objects.countries).features;\n      this.generateMap(land);\n    }).catch(e => console.log('err in fecth world map data ', e));\n  }\n\n  generateMap(land) {\n    const projection = geoKavrayskiy7().scale(170).translate([width / 2, height / 2]).precision(.1);\n    const graticule = geoGraticule();\n    const canvas1 = d3Select(this.refMap.current).attr(\"width\", width).attr(\"height\", height);\n    const canvas2 = d3Select(this.refTrack.current).attr(\"width\", width).attr(\"height\", height);\n    let context1 = canvas1.node().getContext(\"2d\");\n    let context2 = canvas2.node().getContext(\"2d\");\n    let path = geoPath().projection(projection).context(context1);\n    land.forEach(ele => {\n      context1.fillStyle = '#B3DDEF';\n      context1.strokeStyle = '#000';\n      context1.globalAlpha = 0.7;\n      context1.beginPath();\n      path(ele);\n      context1.fill();\n      context1.stroke();\n      context1.strokeStyle = 'rgba(220, 220, 220, 0.1)';\n      context1.beginPath();\n      path(graticule());\n      context1.lineWidth = 0.1;\n      context1.stroke();\n      context1.beginPath();\n      context1.lineWidth = 0.5;\n      path(graticule.outline());\n      context1.stroke();\n    });\n  }\n\n  componentDidUpdate(prevProps, prevState, snapshot) {\n    if (prevProps.satData !== this.props.satData) {\n      const {\n        latitude,\n        longitude,\n        elevation,\n        altitude,\n        duration\n      } = this.props.observerData;\n      const endTime = duration * 60;\n      const urls = this.props.satData.map(sat => {\n        const {\n          satid\n        } = sat;\n        const url = `/api/${SATELLITE_POSITION_URL}/${satid}/${latitude}/${longitude}/${elevation}/${endTime}/&apiKey=${SAT_API_KEY}`;\n        return axios.get(url);\n      });\n      Promise.all(urls).then(res => {\n        const arr = res.map(sat => sat.data);\n        this.setState({\n          isLoading: false,\n          isDrawing: true\n        });\n\n        if (!prevState.isDrawing) {\n          this.track(arr);\n        } else {\n          const oHint = document.getElementsByClassName(\"hint\")[0];\n          oHint.innerHTML = \"Please wait for these satellite animation to finish before selection new ones!\";\n        }\n      }).catch(e => {\n        console.log(\"err in fetch satellite position -> \", e.message);\n      });\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"map-box\",\n      children: [/*#__PURE__*/_jsxDEV(\"canvas\", {\n        className: \"map\",\n        ref: this.refMap\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n        ref: this.refTrack\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default WorldMap;","map":{"version":3,"names":["React","Component","createRef","feature","axios","geoKavrayskiy7","geoGraticule","geoPath","select","d3Select","d3Scale","timeFormat","d3TimeFormat","schemeCategory10","WORLD_MAP_URL","SATELLITE_POSITION_URL","SAT_API_KEY","width","height","WorldMap","constructor","state","map","color","scaleOrdinal","refTrack","refMap","componentDidMount","get","then","res","data","land","objects","countries","features","generateMap","catch","e","console","log","projection","scale","translate","precision","graticule","canvas1","current","attr","canvas2","context1","node","getContext","context2","path","context","forEach","ele","fillStyle","strokeStyle","globalAlpha","beginPath","fill","stroke","lineWidth","outline","componentDidUpdate","prevProps","prevState","snapshot","satData","props","latitude","longitude","elevation","altitude","duration","observerData","endTime","urls","sat","satid","url","Promise","all","arr","setState","isLoading","isDrawing","track","oHint","document","getElementsByClassName","innerHTML","message","render"],"sources":["D:/LaiOfferProjects/starlink/starlink/src/components/WorldMap.js"],"sourcesContent":["import React, {Component, createRef} from 'react';\r\nimport { feature } from 'topojson-client';\r\nimport axios from 'axios';\r\nimport { geoKavrayskiy7 } from 'd3-geo-projection';\r\nimport { geoGraticule, geoPath } from 'd3-geo';\r\nimport { select as d3Select } from 'd3-selection';\r\nimport * as d3Scale from \"d3-scale\";\r\nimport { timeFormat as d3TimeFormat } from \"d3-time-format\";\r\nimport { schemeCategory10 } from \"d3-scale-chromatic\";\r\nimport { WORLD_MAP_URL, SATELLITE_POSITION_URL, SAT_API_KEY } from \"../constants\";\r\n\r\nconst width = 960;\r\nconst height = 600;\r\n\r\nclass WorldMap extends Component {\r\n    constructor(){\r\n        super();\r\n        this.state = {\r\n\r\n        }\r\n        this.map = null;\r\n        this.color = d3Scale.scaleOrdinal(schemeCategory10);\r\n        this.refTrack = createRef();\r\n        this.refMap = React.createRef();\r\n    }\r\n\r\n    componentDidMount() {\r\n        axios.get(WORLD_MAP_URL)\r\n            .then(res => {\r\n                const { data } = res;\r\n                const land = feature(data, data.objects.countries).features;\r\n                this.generateMap(land);\r\n            })\r\n            .catch(e => console.log('err in fecth world map data ', e))\r\n    }\r\n\r\n    generateMap(land){\r\n        const projection = geoKavrayskiy7()\r\n            .scale(170)\r\n            .translate([width / 2, height / 2])\r\n            .precision(.1);\r\n\r\n        const graticule = geoGraticule();\r\n\r\n        const canvas1 = d3Select(this.refMap.current)\r\n            .attr(\"width\", width)\r\n            .attr(\"height\", height);\r\n\r\n        const canvas2 = d3Select(this.refTrack.current)\r\n            .attr(\"width\", width)\r\n            .attr(\"height\", height);\r\n\r\n        let context1 = canvas1.node().getContext(\"2d\");\r\n        let context2 = canvas2.node().getContext(\"2d\");\r\n\r\n        let path = geoPath()\r\n            .projection(projection)\r\n            .context(context1);\r\n\r\n        land.forEach(ele => {\r\n            context1.fillStyle = '#B3DDEF';\r\n            context1.strokeStyle = '#000';\r\n            context1.globalAlpha = 0.7;\r\n            context1.beginPath();\r\n            path(ele);\r\n            context1.fill();\r\n            context1.stroke();\r\n\r\n            context1.strokeStyle = 'rgba(220, 220, 220, 0.1)';\r\n            context1.beginPath();\r\n            path(graticule());\r\n            context1.lineWidth = 0.1;\r\n            context1.stroke();\r\n\r\n            context1.beginPath();\r\n            context1.lineWidth = 0.5;\r\n            path(graticule.outline());\r\n            context1.stroke();\r\n        })\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if (prevProps.satData !== this.props.satData) {\r\n            const {\r\n                latitude,\r\n                longitude,\r\n                elevation,\r\n                altitude,\r\n                duration\r\n            } = this.props.observerData;\r\n\r\n            const endTime = duration * 60;\r\n\r\n            const urls = this.props.satData.map( sat => {\r\n                const { satid } = sat;\r\n                const url =\r\n                    `/api/${SATELLITE_POSITION_URL}/${satid}/${latitude}/${longitude}/${elevation}/${endTime}/&apiKey=${SAT_API_KEY}`;\r\n                return axios.get(url);\r\n            })\r\n\r\n            Promise.all(urls)\r\n                .then(res => {\r\n                    const arr = res.map(sat => sat.data);\r\n                    this.setState({\r\n                        isLoading: false,\r\n                        isDrawing: true\r\n                    });\r\n\r\n                    if (!prevState.isDrawing) {\r\n                        this.track(arr);\r\n                    } else {\r\n                        const oHint = document.getElementsByClassName(\"hint\")[0];\r\n                        oHint.innerHTML =\r\n                            \"Please wait for these satellite animation to finish before selection new ones!\";\r\n                    }\r\n                })\r\n                .catch(e => {\r\n                    console.log(\"err in fetch satellite position -> \", e.message);\r\n                });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"map-box\">\r\n                <canvas className=\"map\" ref={this.refMap} />\r\n                <canvas ref={this.refTrack}/>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default WorldMap;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}