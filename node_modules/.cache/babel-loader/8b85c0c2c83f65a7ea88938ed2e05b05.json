{"ast":null,"code":"import { geoAzimuthalEquidistantRaw as azimuthalEquidistantRaw } from \"d3-geo\";\nimport { acos, atan2, cos, sin, sqrt, tan } from \"./math.js\";\nimport twoPoint from \"./twoPoint.js\";\nexport function twoPointEquidistantRaw(z0) {\n  if (!(z0 *= 2)) return azimuthalEquidistantRaw;\n  var lambdaa = -z0 / 2,\n      lambdab = -lambdaa,\n      z02 = z0 * z0,\n      tanLambda0 = tan(lambdab),\n      S = 0.5 / sin(lambdab);\n\n  function forward(lambda, phi) {\n    var za = acos(cos(phi) * cos(lambda - lambdaa)),\n        zb = acos(cos(phi) * cos(lambda - lambdab)),\n        ys = phi < 0 ? -1 : 1;\n    za *= za, zb *= zb;\n    return [(za - zb) / (2 * z0), ys * sqrt(4 * z02 * zb - (z02 - za + zb) * (z02 - za + zb)) / (2 * z0)];\n  }\n\n  forward.invert = function (x, y) {\n    var y2 = y * y,\n        cosza = cos(sqrt(y2 + (t = x + lambdaa) * t)),\n        coszb = cos(sqrt(y2 + (t = x + lambdab) * t)),\n        t,\n        d;\n    return [atan2(d = cosza - coszb, t = (cosza + coszb) * tanLambda0), (y < 0 ? -1 : 1) * acos(sqrt(t * t + d * d) * S)];\n  };\n\n  return forward;\n}\nexport function twoPointEquidistantUsa() {\n  return twoPointEquidistant([-158, 21.5], [-77, 39]).clipAngle(130).scale(122.571);\n}\nexport default function twoPointEquidistant(p0, p1) {\n  return twoPoint(twoPointEquidistantRaw, p0, p1);\n}","map":{"version":3,"names":["geoAzimuthalEquidistantRaw","azimuthalEquidistantRaw","acos","atan2","cos","sin","sqrt","tan","twoPoint","twoPointEquidistantRaw","z0","lambdaa","lambdab","z02","tanLambda0","S","forward","lambda","phi","za","zb","ys","invert","x","y","y2","cosza","t","coszb","d","twoPointEquidistantUsa","twoPointEquidistant","clipAngle","scale","p0","p1"],"sources":["D:/LaiOfferProjects/starlink/starlink/node_modules/d3-geo-projection/src/twoPointEquidistant.js"],"sourcesContent":["import {geoAzimuthalEquidistantRaw as azimuthalEquidistantRaw} from \"d3-geo\";\nimport {acos, atan2, cos, sin, sqrt, tan} from \"./math.js\";\nimport twoPoint from \"./twoPoint.js\";\n\nexport function twoPointEquidistantRaw(z0) {\n  if (!(z0 *= 2)) return azimuthalEquidistantRaw;\n  var lambdaa = -z0 / 2,\n      lambdab = -lambdaa,\n      z02 = z0 * z0,\n      tanLambda0 = tan(lambdab),\n      S = 0.5 / sin(lambdab);\n\n  function forward(lambda, phi) {\n    var za = acos(cos(phi) * cos(lambda - lambdaa)),\n        zb = acos(cos(phi) * cos(lambda - lambdab)),\n        ys = phi < 0 ? -1 : 1;\n    za *= za, zb *= zb;\n    return [\n      (za - zb) / (2 * z0),\n      ys * sqrt(4 * z02 * zb - (z02 - za + zb) * (z02 - za + zb)) / (2 * z0)\n    ];\n  }\n\n  forward.invert = function(x, y) {\n    var y2 = y * y,\n        cosza = cos(sqrt(y2 + (t = x + lambdaa) * t)),\n        coszb = cos(sqrt(y2 + (t = x + lambdab) * t)),\n        t,\n        d;\n    return [\n      atan2(d = cosza - coszb, t = (cosza + coszb) * tanLambda0),\n      (y < 0 ? -1 : 1) * acos(sqrt(t * t + d * d) * S)\n    ];\n  };\n\n  return forward;\n}\n\nexport function twoPointEquidistantUsa() {\n  return twoPointEquidistant([-158, 21.5], [-77, 39])\n      .clipAngle(130)\n      .scale(122.571);\n}\n\nexport default function twoPointEquidistant(p0, p1) {\n  return twoPoint(twoPointEquidistantRaw, p0, p1);\n}\n"],"mappings":"AAAA,SAAQA,0BAA0B,IAAIC,uBAAtC,QAAoE,QAApE;AACA,SAAQC,IAAR,EAAcC,KAAd,EAAqBC,GAArB,EAA0BC,GAA1B,EAA+BC,IAA/B,EAAqCC,GAArC,QAA+C,WAA/C;AACA,OAAOC,QAAP,MAAqB,eAArB;AAEA,OAAO,SAASC,sBAAT,CAAgCC,EAAhC,EAAoC;EACzC,IAAI,EAAEA,EAAE,IAAI,CAAR,CAAJ,EAAgB,OAAOT,uBAAP;EAChB,IAAIU,OAAO,GAAG,CAACD,EAAD,GAAM,CAApB;EAAA,IACIE,OAAO,GAAG,CAACD,OADf;EAAA,IAEIE,GAAG,GAAGH,EAAE,GAAGA,EAFf;EAAA,IAGII,UAAU,GAAGP,GAAG,CAACK,OAAD,CAHpB;EAAA,IAIIG,CAAC,GAAG,MAAMV,GAAG,CAACO,OAAD,CAJjB;;EAMA,SAASI,OAAT,CAAiBC,MAAjB,EAAyBC,GAAzB,EAA8B;IAC5B,IAAIC,EAAE,GAAGjB,IAAI,CAACE,GAAG,CAACc,GAAD,CAAH,GAAWd,GAAG,CAACa,MAAM,GAAGN,OAAV,CAAf,CAAb;IAAA,IACIS,EAAE,GAAGlB,IAAI,CAACE,GAAG,CAACc,GAAD,CAAH,GAAWd,GAAG,CAACa,MAAM,GAAGL,OAAV,CAAf,CADb;IAAA,IAEIS,EAAE,GAAGH,GAAG,GAAG,CAAN,GAAU,CAAC,CAAX,GAAe,CAFxB;IAGAC,EAAE,IAAIA,EAAN,EAAUC,EAAE,IAAIA,EAAhB;IACA,OAAO,CACL,CAACD,EAAE,GAAGC,EAAN,KAAa,IAAIV,EAAjB,CADK,EAELW,EAAE,GAAGf,IAAI,CAAC,IAAIO,GAAJ,GAAUO,EAAV,GAAe,CAACP,GAAG,GAAGM,EAAN,GAAWC,EAAZ,KAAmBP,GAAG,GAAGM,EAAN,GAAWC,EAA9B,CAAhB,CAAT,IAA+D,IAAIV,EAAnE,CAFK,CAAP;EAID;;EAEDM,OAAO,CAACM,MAAR,GAAiB,UAASC,CAAT,EAAYC,CAAZ,EAAe;IAC9B,IAAIC,EAAE,GAAGD,CAAC,GAAGA,CAAb;IAAA,IACIE,KAAK,GAAGtB,GAAG,CAACE,IAAI,CAACmB,EAAE,GAAG,CAACE,CAAC,GAAGJ,CAAC,GAAGZ,OAAT,IAAoBgB,CAA1B,CAAL,CADf;IAAA,IAEIC,KAAK,GAAGxB,GAAG,CAACE,IAAI,CAACmB,EAAE,GAAG,CAACE,CAAC,GAAGJ,CAAC,GAAGX,OAAT,IAAoBe,CAA1B,CAAL,CAFf;IAAA,IAGIA,CAHJ;IAAA,IAIIE,CAJJ;IAKA,OAAO,CACL1B,KAAK,CAAC0B,CAAC,GAAGH,KAAK,GAAGE,KAAb,EAAoBD,CAAC,GAAG,CAACD,KAAK,GAAGE,KAAT,IAAkBd,UAA1C,CADA,EAEL,CAACU,CAAC,GAAG,CAAJ,GAAQ,CAAC,CAAT,GAAa,CAAd,IAAmBtB,IAAI,CAACI,IAAI,CAACqB,CAAC,GAAGA,CAAJ,GAAQE,CAAC,GAAGA,CAAb,CAAJ,GAAsBd,CAAvB,CAFlB,CAAP;EAID,CAVD;;EAYA,OAAOC,OAAP;AACD;AAED,OAAO,SAASc,sBAAT,GAAkC;EACvC,OAAOC,mBAAmB,CAAC,CAAC,CAAC,GAAF,EAAO,IAAP,CAAD,EAAe,CAAC,CAAC,EAAF,EAAM,EAAN,CAAf,CAAnB,CACFC,SADE,CACQ,GADR,EAEFC,KAFE,CAEI,OAFJ,CAAP;AAGD;AAED,eAAe,SAASF,mBAAT,CAA6BG,EAA7B,EAAiCC,EAAjC,EAAqC;EAClD,OAAO3B,QAAQ,CAACC,sBAAD,EAAyByB,EAAzB,EAA6BC,EAA7B,CAAf;AACD"},"metadata":{},"sourceType":"module"}