{"ast":null,"code":"var _jsxFileName = \"D:\\\\LaiOfferProjects\\\\starlink\\\\starlink\\\\src\\\\components\\\\Main.js\";\nimport React, { Component } from 'react';\nimport { Col, Row } from 'antd';\nimport SatSetting from \"./SatSetting\";\nimport SatelliteList from \"./SatelliteList\";\nimport { BASE_URL, SAT_API_KEY, NEARBY_SATELLITE, STARLINK_CATEGORY } from \"../constants\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Main extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      setting: {},\n      satInfo: {}\n    };\n\n    this.showNearbySatellite = setting => {\n      // cb fn => get settings from the SatSetting\n      this.setState({\n        setting: setting\n      }); // fetch sat list from the server\n\n      this.fetchSatellite(setting);\n    };\n\n    this.fetchSatellite = setting => {\n      // 1. get sat info from the server\n      //  - setting / reg info\n      // 2. analyze the response\n      //  - case1: success => pass results to SatList\n      //  - case2: failure => inform the user\n      const {\n        latitude,\n        longitude,\n        elevation,\n        altitude\n      } = setting;\n      const url = `${BASE_URL}/${NEARBY_SATELLITE}/${latitude}/${longitude}/\n            ${elevation}/${altitude}/${STARLINK_CATEGORY}/&apiKey=${SAT_API_KEY}`; // no need to configure data info\n\n      axios.get(url).then(res => {\n        console.log(res);\n\n        if (res.status === 200) {\n          this.setState({\n            satInfo: res.data\n          });\n        }\n      }).catch(err => {\n        console.log(err.message);\n      });\n    };\n  }\n\n  render() {\n    const {\n      satInfo\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(Row, {\n      children: [/*#__PURE__*/_jsxDEV(Col, {\n        span: 8,\n        className: \"left-side\",\n        children: [/*#__PURE__*/_jsxDEV(SatSetting, {\n          onShow: this.showNearbySatellite\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 20\n        }, this), /*#__PURE__*/_jsxDEV(SatelliteList, {\n          satInfo: satInfo\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 20\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 16\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        span: 16,\n        className: \"right-side\",\n        children: \"right\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 16\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 12\n    }, this);\n  }\n\n}\n\nexport default Main;","map":{"version":3,"names":["React","Component","Col","Row","SatSetting","SatelliteList","BASE_URL","SAT_API_KEY","NEARBY_SATELLITE","STARLINK_CATEGORY","axios","Main","state","setting","satInfo","showNearbySatellite","setState","fetchSatellite","latitude","longitude","elevation","altitude","url","get","then","res","console","log","status","data","catch","err","message","render"],"sources":["D:/LaiOfferProjects/starlink/starlink/src/components/Main.js"],"sourcesContent":["import React, {Component} from 'react';\r\nimport { Col, Row } from 'antd';\r\nimport SatSetting from \"./SatSetting\";\r\nimport SatelliteList from \"./SatelliteList\";\r\nimport { BASE_URL, SAT_API_KEY, NEARBY_SATELLITE, STARLINK_CATEGORY } from \"../constants\";\r\nimport axios from \"axios\";\r\n\r\nclass Main extends Component {\r\n    state = {\r\n        setting: {},\r\n        satInfo: {}\r\n    }\r\n\r\n    showNearbySatellite = setting => {\r\n        // cb fn => get settings from the SatSetting\r\n        this.setState( {setting: setting});\r\n        // fetch sat list from the server\r\n        this.fetchSatellite(setting);\r\n    }\r\n\r\n    fetchSatellite = setting => {\r\n        // 1. get sat info from the server\r\n        //  - setting / reg info\r\n        // 2. analyze the response\r\n        //  - case1: success => pass results to SatList\r\n        //  - case2: failure => inform the user\r\n        const { latitude, longitude, elevation, altitude } = setting;\r\n        const url =\r\n            `${BASE_URL}/${NEARBY_SATELLITE}/${latitude}/${longitude}/\r\n            ${elevation}/${altitude}/${STARLINK_CATEGORY}/&apiKey=${SAT_API_KEY}`;\r\n\r\n        // no need to configure data info\r\n        axios.get(url)\r\n            .then( res => {\r\n                console.log(res);\r\n                if (res.status === 200) {\r\n                    this.setState( {\r\n                        satInfo: res.data\r\n                    })\r\n                }\r\n            })\r\n            .catch( err => {\r\n                console.log(err.message);\r\n            })\r\n    }\r\n\r\n    render() {\r\n        const { satInfo } = this.state;\r\n\r\n        return (\r\n           <Row>\r\n               <Col span={8} className=\"left-side\">\r\n                   <SatSetting onShow={this.showNearbySatellite}/>\r\n                   <SatelliteList satInfo={satInfo}/>\r\n               </Col>\r\n               <Col span={16} className=\"right-side\">\r\n                   right\r\n               </Col>\r\n           </Row>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Main;"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAASC,GAAT,EAAcC,GAAd,QAAyB,MAAzB;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,SAASC,QAAT,EAAmBC,WAAnB,EAAgCC,gBAAhC,EAAkDC,iBAAlD,QAA2E,cAA3E;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;AAEA,MAAMC,IAAN,SAAmBV,SAAnB,CAA6B;EAAA;IAAA;IAAA,KACzBW,KADyB,GACjB;MACJC,OAAO,EAAE,EADL;MAEJC,OAAO,EAAE;IAFL,CADiB;;IAAA,KAMzBC,mBANyB,GAMHF,OAAO,IAAI;MAC7B;MACA,KAAKG,QAAL,CAAe;QAACH,OAAO,EAAEA;MAAV,CAAf,EAF6B,CAG7B;;MACA,KAAKI,cAAL,CAAoBJ,OAApB;IACH,CAXwB;;IAAA,KAazBI,cAbyB,GAaRJ,OAAO,IAAI;MACxB;MACA;MACA;MACA;MACA;MACA,MAAM;QAAEK,QAAF;QAAYC,SAAZ;QAAuBC,SAAvB;QAAkCC;MAAlC,IAA+CR,OAArD;MACA,MAAMS,GAAG,GACJ,GAAEhB,QAAS,IAAGE,gBAAiB,IAAGU,QAAS,IAAGC,SAAU;AACrE,cAAcC,SAAU,IAAGC,QAAS,IAAGZ,iBAAkB,YAAWF,WAAY,EAFxE,CAPwB,CAWxB;;MACAG,KAAK,CAACa,GAAN,CAAUD,GAAV,EACKE,IADL,CACWC,GAAG,IAAI;QACVC,OAAO,CAACC,GAAR,CAAYF,GAAZ;;QACA,IAAIA,GAAG,CAACG,MAAJ,KAAe,GAAnB,EAAwB;UACpB,KAAKZ,QAAL,CAAe;YACXF,OAAO,EAAEW,GAAG,CAACI;UADF,CAAf;QAGH;MACJ,CARL,EASKC,KATL,CASYC,GAAG,IAAI;QACXL,OAAO,CAACC,GAAR,CAAYI,GAAG,CAACC,OAAhB;MACH,CAXL;IAYH,CArCwB;EAAA;;EAuCzBC,MAAM,GAAG;IACL,MAAM;MAAEnB;IAAF,IAAc,KAAKF,KAAzB;IAEA,oBACG,QAAC,GAAD;MAAA,wBACI,QAAC,GAAD;QAAK,IAAI,EAAE,CAAX;QAAc,SAAS,EAAC,WAAxB;QAAA,wBACI,QAAC,UAAD;UAAY,MAAM,EAAE,KAAKG;QAAzB;UAAA;UAAA;UAAA;QAAA,QADJ,eAEI,QAAC,aAAD;UAAe,OAAO,EAAED;QAAxB;UAAA;UAAA;UAAA;QAAA,QAFJ;MAAA;QAAA;QAAA;QAAA;MAAA,QADJ,eAKI,QAAC,GAAD;QAAK,IAAI,EAAE,EAAX;QAAe,SAAS,EAAC,YAAzB;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QALJ;IAAA;MAAA;MAAA;MAAA;IAAA,QADH;EAWH;;AArDwB;;AAwD7B,eAAeH,IAAf"},"metadata":{},"sourceType":"module"}