{"ast":null,"code":"import { geoStream } from \"d3-geo\";\nimport noop from \"../noop.js\";\nimport clockwise from \"./clockwise.js\";\nimport contains from \"./contains.js\";\nexport default function (object, projection) {\n  var stream = projection.stream,\n      project;\n  if (!stream) throw new Error(\"invalid projection\");\n\n  switch (object && object.type) {\n    case \"Feature\":\n      project = projectFeature;\n      break;\n\n    case \"FeatureCollection\":\n      project = projectFeatureCollection;\n      break;\n\n    default:\n      project = projectGeometry;\n      break;\n  }\n\n  return project(object, stream);\n}\n\nfunction projectFeatureCollection(o, stream) {\n  return {\n    type: \"FeatureCollection\",\n    features: o.features.map(function (f) {\n      return projectFeature(f, stream);\n    })\n  };\n}\n\nfunction projectFeature(o, stream) {\n  return {\n    type: \"Feature\",\n    id: o.id,\n    properties: o.properties,\n    geometry: projectGeometry(o.geometry, stream)\n  };\n}\n\nfunction projectGeometryCollection(o, stream) {\n  return {\n    type: \"GeometryCollection\",\n    geometries: o.geometries.map(function (o) {\n      return projectGeometry(o, stream);\n    })\n  };\n}\n\nfunction projectGeometry(o, stream) {\n  if (!o) return null;\n  if (o.type === \"GeometryCollection\") return projectGeometryCollection(o, stream);\n  var sink;\n\n  switch (o.type) {\n    case \"Point\":\n      sink = sinkPoint;\n      break;\n\n    case \"MultiPoint\":\n      sink = sinkPoint;\n      break;\n\n    case \"LineString\":\n      sink = sinkLine;\n      break;\n\n    case \"MultiLineString\":\n      sink = sinkLine;\n      break;\n\n    case \"Polygon\":\n      sink = sinkPolygon;\n      break;\n\n    case \"MultiPolygon\":\n      sink = sinkPolygon;\n      break;\n\n    case \"Sphere\":\n      sink = sinkPolygon;\n      break;\n\n    default:\n      return null;\n  }\n\n  geoStream(o, stream(sink));\n  return sink.result();\n}\n\nvar points = [],\n    lines = [];\nvar sinkPoint = {\n  point: function (x, y) {\n    points.push([x, y]);\n  },\n  result: function () {\n    var result = !points.length ? null : points.length < 2 ? {\n      type: \"Point\",\n      coordinates: points[0]\n    } : {\n      type: \"MultiPoint\",\n      coordinates: points\n    };\n    points = [];\n    return result;\n  }\n};\nvar sinkLine = {\n  lineStart: noop,\n  point: function (x, y) {\n    points.push([x, y]);\n  },\n  lineEnd: function () {\n    if (points.length) lines.push(points), points = [];\n  },\n  result: function () {\n    var result = !lines.length ? null : lines.length < 2 ? {\n      type: \"LineString\",\n      coordinates: lines[0]\n    } : {\n      type: \"MultiLineString\",\n      coordinates: lines\n    };\n    lines = [];\n    return result;\n  }\n};\nvar sinkPolygon = {\n  polygonStart: noop,\n  lineStart: noop,\n  point: function (x, y) {\n    points.push([x, y]);\n  },\n  lineEnd: function () {\n    var n = points.length;\n\n    if (n) {\n      do points.push(points[0].slice()); while (++n < 4);\n\n      lines.push(points), points = [];\n    }\n  },\n  polygonEnd: noop,\n  result: function () {\n    if (!lines.length) return null;\n    var polygons = [],\n        holes = []; // https://github.com/d3/d3/issues/1558\n\n    lines.forEach(function (ring) {\n      if (clockwise(ring)) polygons.push([ring]);else holes.push(ring);\n    });\n    holes.forEach(function (hole) {\n      var point = hole[0];\n      polygons.some(function (polygon) {\n        if (contains(polygon[0], point)) {\n          polygon.push(hole);\n          return true;\n        }\n      }) || polygons.push([hole]);\n    });\n    lines = [];\n    return !polygons.length ? null : polygons.length > 1 ? {\n      type: \"MultiPolygon\",\n      coordinates: polygons\n    } : {\n      type: \"Polygon\",\n      coordinates: polygons[0]\n    };\n  }\n};","map":{"version":3,"names":["geoStream","noop","clockwise","contains","object","projection","stream","project","Error","type","projectFeature","projectFeatureCollection","projectGeometry","o","features","map","f","id","properties","geometry","projectGeometryCollection","geometries","sink","sinkPoint","sinkLine","sinkPolygon","result","points","lines","point","x","y","push","length","coordinates","lineStart","lineEnd","polygonStart","n","slice","polygonEnd","polygons","holes","forEach","ring","hole","some","polygon"],"sources":["D:/LaiOfferProjects/starlink/starlink/node_modules/d3-geo-projection/src/project/index.js"],"sourcesContent":["import {geoStream} from \"d3-geo\";\nimport noop from \"../noop.js\";\nimport clockwise from \"./clockwise.js\";\nimport contains from \"./contains.js\";\n\nexport default function(object, projection) {\n  var stream = projection.stream, project;\n  if (!stream) throw new Error(\"invalid projection\");\n  switch (object && object.type) {\n    case \"Feature\": project = projectFeature; break;\n    case \"FeatureCollection\": project = projectFeatureCollection; break;\n    default: project = projectGeometry; break;\n  }\n  return project(object, stream);\n}\n\nfunction projectFeatureCollection(o, stream) {\n  return {\n    type: \"FeatureCollection\",\n    features: o.features.map(function(f) {\n      return projectFeature(f, stream);\n    })\n  };\n}\n\nfunction projectFeature(o, stream) {\n  return {\n    type: \"Feature\",\n    id: o.id,\n    properties: o.properties,\n    geometry: projectGeometry(o.geometry, stream)\n  };\n}\n\nfunction projectGeometryCollection(o, stream) {\n  return {\n    type: \"GeometryCollection\",\n    geometries: o.geometries.map(function(o) {\n      return projectGeometry(o, stream);\n    })\n  };\n}\n\nfunction projectGeometry(o, stream) {\n  if (!o) return null;\n  if (o.type === \"GeometryCollection\") return projectGeometryCollection(o, stream);\n  var sink;\n  switch (o.type) {\n    case \"Point\": sink = sinkPoint; break;\n    case \"MultiPoint\": sink = sinkPoint; break;\n    case \"LineString\": sink = sinkLine; break;\n    case \"MultiLineString\": sink = sinkLine; break;\n    case \"Polygon\": sink = sinkPolygon; break;\n    case \"MultiPolygon\": sink = sinkPolygon; break;\n    case \"Sphere\": sink = sinkPolygon; break;\n    default: return null;\n  }\n  geoStream(o, stream(sink));\n  return sink.result();\n}\n\nvar points = [],\n    lines = [];\n\nvar sinkPoint = {\n  point: function(x, y) {\n    points.push([x, y]);\n  },\n  result: function() {\n    var result = !points.length ? null\n        : points.length < 2 ? {type: \"Point\", coordinates: points[0]}\n        : {type: \"MultiPoint\", coordinates: points};\n    points = [];\n    return result;\n  }\n};\n\nvar sinkLine = {\n  lineStart: noop,\n  point: function(x, y) {\n    points.push([x, y]);\n  },\n  lineEnd: function() {\n    if (points.length) lines.push(points), points = [];\n  },\n  result: function() {\n    var result = !lines.length ? null\n        : lines.length < 2 ? {type: \"LineString\", coordinates: lines[0]}\n        : {type: \"MultiLineString\", coordinates: lines};\n    lines = [];\n    return result;\n  }\n};\n\nvar sinkPolygon = {\n  polygonStart: noop,\n  lineStart: noop,\n  point: function(x, y) {\n    points.push([x, y]);\n  },\n  lineEnd: function() {\n    var n = points.length;\n    if (n) {\n      do points.push(points[0].slice()); while (++n < 4);\n      lines.push(points), points = [];\n    }\n  },\n  polygonEnd: noop,\n  result: function() {\n    if (!lines.length) return null;\n    var polygons = [],\n        holes = [];\n\n    // https://github.com/d3/d3/issues/1558\n    lines.forEach(function(ring) {\n      if (clockwise(ring)) polygons.push([ring]);\n      else holes.push(ring);\n    });\n\n    holes.forEach(function(hole) {\n      var point = hole[0];\n      polygons.some(function(polygon) {\n        if (contains(polygon[0], point)) {\n          polygon.push(hole);\n          return true;\n        }\n      }) || polygons.push([hole]);\n    });\n\n    lines = [];\n\n    return !polygons.length ? null\n        : polygons.length > 1 ? {type: \"MultiPolygon\", coordinates: polygons}\n        : {type: \"Polygon\", coordinates: polygons[0]};\n  }\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}