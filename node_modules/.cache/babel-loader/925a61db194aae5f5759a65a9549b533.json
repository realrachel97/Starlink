{"ast":null,"code":"import { geoProjectionMutator as projectionMutator } from \"d3-geo\";\nimport { cos, halfPi, pi, sin, sqrt } from \"./math.js\";\nimport { solve } from \"./newton.js\";\nexport function foucautSinusoidalRaw(alpha) {\n  var beta = 1 - alpha,\n      equatorial = raw(pi, 0)[0] - raw(-pi, 0)[0],\n      polar = raw(0, halfPi)[1] - raw(0, -halfPi)[1],\n      ratio = sqrt(2 * polar / equatorial);\n\n  function raw(lambda, phi) {\n    var cosphi = cos(phi),\n        sinphi = sin(phi);\n    return [cosphi / (beta + alpha * cosphi) * lambda, beta * phi + alpha * sinphi];\n  }\n\n  function forward(lambda, phi) {\n    var p = raw(lambda, phi);\n    return [p[0] * ratio, p[1] / ratio];\n  }\n\n  function forwardMeridian(phi) {\n    return forward(0, phi)[1];\n  }\n\n  forward.invert = function (x, y) {\n    var phi = solve(forwardMeridian, y),\n        lambda = x / ratio * (alpha + beta / cos(phi));\n    return [lambda, phi];\n  };\n\n  return forward;\n}\nexport default function () {\n  var alpha = 0.5,\n      m = projectionMutator(foucautSinusoidalRaw),\n      p = m(alpha);\n\n  p.alpha = function (_) {\n    return arguments.length ? m(alpha = +_) : alpha;\n  };\n\n  return p.scale(168.725);\n}","map":{"version":3,"names":["geoProjectionMutator","projectionMutator","cos","halfPi","pi","sin","sqrt","solve","foucautSinusoidalRaw","alpha","beta","equatorial","raw","polar","ratio","lambda","phi","cosphi","sinphi","forward","p","forwardMeridian","invert","x","y","m","_","arguments","length","scale"],"sources":["D:/LaiOfferProjects/starlink/starlink/node_modules/d3-geo-projection/src/foucautSinusoidal.js"],"sourcesContent":["import {geoProjectionMutator as projectionMutator} from \"d3-geo\";\nimport {cos, halfPi, pi, sin, sqrt} from \"./math.js\";\nimport {solve} from \"./newton.js\";\n\nexport function foucautSinusoidalRaw(alpha) {\n  var beta = 1 - alpha,\n      equatorial = raw(pi, 0)[0] - raw(-pi, 0)[0],\n      polar = raw(0, halfPi)[1] - raw(0, -halfPi)[1],\n      ratio = sqrt(2 * polar / equatorial);\n\n  function raw(lambda, phi) {\n    var cosphi = cos(phi),\n        sinphi = sin(phi);\n    return [\n      cosphi / (beta + alpha * cosphi) * lambda,\n      beta * phi + alpha * sinphi\n    ];\n  }\n\n  function forward(lambda, phi) {\n    var p = raw(lambda, phi);\n    return [p[0] * ratio, p[1] / ratio];\n  }\n\n  function forwardMeridian(phi) {\n    return forward(0, phi)[1];\n  }\n\n  forward.invert = function(x, y) {\n    var phi = solve(forwardMeridian, y),\n        lambda = x / ratio * (alpha + beta / cos(phi));\n    return [lambda, phi];\n  };\n\n  return forward;\n}\n\nexport default function() {\n  var alpha = 0.5,\n      m = projectionMutator(foucautSinusoidalRaw),\n      p = m(alpha);\n\n  p.alpha = function(_) {\n    return arguments.length ? m(alpha = +_) : alpha;\n  };\n\n  return p\n      .scale(168.725);\n}\n"],"mappings":"AAAA,SAAQA,oBAAoB,IAAIC,iBAAhC,QAAwD,QAAxD;AACA,SAAQC,GAAR,EAAaC,MAAb,EAAqBC,EAArB,EAAyBC,GAAzB,EAA8BC,IAA9B,QAAyC,WAAzC;AACA,SAAQC,KAAR,QAAoB,aAApB;AAEA,OAAO,SAASC,oBAAT,CAA8BC,KAA9B,EAAqC;EAC1C,IAAIC,IAAI,GAAG,IAAID,KAAf;EAAA,IACIE,UAAU,GAAGC,GAAG,CAACR,EAAD,EAAK,CAAL,CAAH,CAAW,CAAX,IAAgBQ,GAAG,CAAC,CAACR,EAAF,EAAM,CAAN,CAAH,CAAY,CAAZ,CADjC;EAAA,IAEIS,KAAK,GAAGD,GAAG,CAAC,CAAD,EAAIT,MAAJ,CAAH,CAAe,CAAf,IAAoBS,GAAG,CAAC,CAAD,EAAI,CAACT,MAAL,CAAH,CAAgB,CAAhB,CAFhC;EAAA,IAGIW,KAAK,GAAGR,IAAI,CAAC,IAAIO,KAAJ,GAAYF,UAAb,CAHhB;;EAKA,SAASC,GAAT,CAAaG,MAAb,EAAqBC,GAArB,EAA0B;IACxB,IAAIC,MAAM,GAAGf,GAAG,CAACc,GAAD,CAAhB;IAAA,IACIE,MAAM,GAAGb,GAAG,CAACW,GAAD,CADhB;IAEA,OAAO,CACLC,MAAM,IAAIP,IAAI,GAAGD,KAAK,GAAGQ,MAAnB,CAAN,GAAmCF,MAD9B,EAELL,IAAI,GAAGM,GAAP,GAAaP,KAAK,GAAGS,MAFhB,CAAP;EAID;;EAED,SAASC,OAAT,CAAiBJ,MAAjB,EAAyBC,GAAzB,EAA8B;IAC5B,IAAII,CAAC,GAAGR,GAAG,CAACG,MAAD,EAASC,GAAT,CAAX;IACA,OAAO,CAACI,CAAC,CAAC,CAAD,CAAD,GAAON,KAAR,EAAeM,CAAC,CAAC,CAAD,CAAD,GAAON,KAAtB,CAAP;EACD;;EAED,SAASO,eAAT,CAAyBL,GAAzB,EAA8B;IAC5B,OAAOG,OAAO,CAAC,CAAD,EAAIH,GAAJ,CAAP,CAAgB,CAAhB,CAAP;EACD;;EAEDG,OAAO,CAACG,MAAR,GAAiB,UAASC,CAAT,EAAYC,CAAZ,EAAe;IAC9B,IAAIR,GAAG,GAAGT,KAAK,CAACc,eAAD,EAAkBG,CAAlB,CAAf;IAAA,IACIT,MAAM,GAAGQ,CAAC,GAAGT,KAAJ,IAAaL,KAAK,GAAGC,IAAI,GAAGR,GAAG,CAACc,GAAD,CAA/B,CADb;IAEA,OAAO,CAACD,MAAD,EAASC,GAAT,CAAP;EACD,CAJD;;EAMA,OAAOG,OAAP;AACD;AAED,eAAe,YAAW;EACxB,IAAIV,KAAK,GAAG,GAAZ;EAAA,IACIgB,CAAC,GAAGxB,iBAAiB,CAACO,oBAAD,CADzB;EAAA,IAEIY,CAAC,GAAGK,CAAC,CAAChB,KAAD,CAFT;;EAIAW,CAAC,CAACX,KAAF,GAAU,UAASiB,CAAT,EAAY;IACpB,OAAOC,SAAS,CAACC,MAAV,GAAmBH,CAAC,CAAChB,KAAK,GAAG,CAACiB,CAAV,CAApB,GAAmCjB,KAA1C;EACD,CAFD;;EAIA,OAAOW,CAAC,CACHS,KADE,CACI,OADJ,CAAP;AAED"},"metadata":{},"sourceType":"module"}