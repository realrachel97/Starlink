{"ast":null,"code":"import { ticks } from \"d3-array\";\nimport { format, formatSpecifier } from \"d3-format\";\nimport nice from \"./nice.js\";\nimport { copy, transformer } from \"./continuous.js\";\nimport { initRange } from \"./init.js\";\n\nfunction transformLog(x) {\n  return Math.log(x);\n}\n\nfunction transformExp(x) {\n  return Math.exp(x);\n}\n\nfunction transformLogn(x) {\n  return -Math.log(-x);\n}\n\nfunction transformExpn(x) {\n  return -Math.exp(-x);\n}\n\nfunction pow10(x) {\n  return isFinite(x) ? +(\"1e\" + x) : x < 0 ? 0 : x;\n}\n\nfunction powp(base) {\n  return base === 10 ? pow10 : base === Math.E ? Math.exp : function (x) {\n    return Math.pow(base, x);\n  };\n}\n\nfunction logp(base) {\n  return base === Math.E ? Math.log : base === 10 && Math.log10 || base === 2 && Math.log2 || (base = Math.log(base), function (x) {\n    return Math.log(x) / base;\n  });\n}\n\nfunction reflect(f) {\n  return function (x, k) {\n    return -f(-x, k);\n  };\n}\n\nexport function loggish(transform) {\n  var scale = transform(transformLog, transformExp);\n  var domain = scale.domain;\n  var base = 10;\n  var logs;\n  var pows;\n\n  function rescale() {\n    logs = logp(base), pows = powp(base);\n\n    if (domain()[0] < 0) {\n      logs = reflect(logs), pows = reflect(pows);\n      transform(transformLogn, transformExpn);\n    } else {\n      transform(transformLog, transformExp);\n    }\n\n    return scale;\n  }\n\n  scale.base = function (_) {\n    return arguments.length ? (base = +_, rescale()) : base;\n  };\n\n  scale.domain = function (_) {\n    return arguments.length ? (domain(_), rescale()) : domain();\n  };\n\n  scale.ticks = function (count) {\n    var d = domain();\n    var u = d[0];\n    var v = d[d.length - 1];\n    var r = v < u;\n\n    if (r) {\n      var _ref = [v, u];\n      u = _ref[0];\n      v = _ref[1];\n    }\n\n    var i = logs(u);\n    var j = logs(v);\n    var k;\n    var t;\n    var n = count == null ? 10 : +count;\n    var z = [];\n\n    if (!(base % 1) && j - i < n) {\n      i = Math.floor(i), j = Math.ceil(j);\n      if (u > 0) for (; i <= j; ++i) {\n        for (k = 1; k < base; ++k) {\n          t = i < 0 ? k / pows(-i) : k * pows(i);\n          if (t < u) continue;\n          if (t > v) break;\n          z.push(t);\n        }\n      } else for (; i <= j; ++i) {\n        for (k = base - 1; k >= 1; --k) {\n          t = i > 0 ? k / pows(-i) : k * pows(i);\n          if (t < u) continue;\n          if (t > v) break;\n          z.push(t);\n        }\n      }\n      if (z.length * 2 < n) z = ticks(u, v, n);\n    } else {\n      z = ticks(i, j, Math.min(j - i, n)).map(pows);\n    }\n\n    return r ? z.reverse() : z;\n  };\n\n  scale.tickFormat = function (count, specifier) {\n    if (count == null) count = 10;\n    if (specifier == null) specifier = base === 10 ? \"s\" : \",\";\n\n    if (typeof specifier !== \"function\") {\n      if (!(base % 1) && (specifier = formatSpecifier(specifier)).precision == null) specifier.trim = true;\n      specifier = format(specifier);\n    }\n\n    if (count === Infinity) return specifier;\n    var k = Math.max(1, base * count / scale.ticks().length); // TODO fast estimate?\n\n    return function (d) {\n      var i = d / pows(Math.round(logs(d)));\n      if (i * base < base - 0.5) i *= base;\n      return i <= k ? specifier(d) : \"\";\n    };\n  };\n\n  scale.nice = function () {\n    return domain(nice(domain(), {\n      floor: function floor(x) {\n        return pows(Math.floor(logs(x)));\n      },\n      ceil: function ceil(x) {\n        return pows(Math.ceil(logs(x)));\n      }\n    }));\n  };\n\n  return scale;\n}\nexport default function log() {\n  var scale = loggish(transformer()).domain([1, 10]);\n\n  scale.copy = function () {\n    return copy(scale, log()).base(scale.base());\n  };\n\n  initRange.apply(scale, arguments);\n  return scale;\n}","map":{"version":3,"names":["ticks","format","formatSpecifier","nice","copy","transformer","initRange","transformLog","x","Math","log","transformExp","exp","transformLogn","transformExpn","pow10","isFinite","powp","base","E","pow","logp","log10","log2","reflect","f","k","loggish","transform","scale","domain","logs","pows","rescale","_","arguments","length","count","d","u","v","r","i","j","t","n","z","floor","ceil","push","min","map","reverse","tickFormat","specifier","precision","trim","Infinity","max","round","apply"],"sources":["D:/LaiOfferProjects/starlink/starlink/node_modules/d3-scale/src/log.js"],"sourcesContent":["import {ticks} from \"d3-array\";\nimport {format, formatSpecifier} from \"d3-format\";\nimport nice from \"./nice.js\";\nimport {copy, transformer} from \"./continuous.js\";\nimport {initRange} from \"./init.js\";\n\nfunction transformLog(x) {\n  return Math.log(x);\n}\n\nfunction transformExp(x) {\n  return Math.exp(x);\n}\n\nfunction transformLogn(x) {\n  return -Math.log(-x);\n}\n\nfunction transformExpn(x) {\n  return -Math.exp(-x);\n}\n\nfunction pow10(x) {\n  return isFinite(x) ? +(\"1e\" + x) : x < 0 ? 0 : x;\n}\n\nfunction powp(base) {\n  return base === 10 ? pow10\n      : base === Math.E ? Math.exp\n      : x => Math.pow(base, x);\n}\n\nfunction logp(base) {\n  return base === Math.E ? Math.log\n      : base === 10 && Math.log10\n      || base === 2 && Math.log2\n      || (base = Math.log(base), x => Math.log(x) / base);\n}\n\nfunction reflect(f) {\n  return (x, k) => -f(-x, k);\n}\n\nexport function loggish(transform) {\n  const scale = transform(transformLog, transformExp);\n  const domain = scale.domain;\n  let base = 10;\n  let logs;\n  let pows;\n\n  function rescale() {\n    logs = logp(base), pows = powp(base);\n    if (domain()[0] < 0) {\n      logs = reflect(logs), pows = reflect(pows);\n      transform(transformLogn, transformExpn);\n    } else {\n      transform(transformLog, transformExp);\n    }\n    return scale;\n  }\n\n  scale.base = function(_) {\n    return arguments.length ? (base = +_, rescale()) : base;\n  };\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain(_), rescale()) : domain();\n  };\n\n  scale.ticks = count => {\n    const d = domain();\n    let u = d[0];\n    let v = d[d.length - 1];\n    const r = v < u;\n\n    if (r) ([u, v] = [v, u]);\n\n    let i = logs(u);\n    let j = logs(v);\n    let k;\n    let t;\n    const n = count == null ? 10 : +count;\n    let z = [];\n\n    if (!(base % 1) && j - i < n) {\n      i = Math.floor(i), j = Math.ceil(j);\n      if (u > 0) for (; i <= j; ++i) {\n        for (k = 1; k < base; ++k) {\n          t = i < 0 ? k / pows(-i) : k * pows(i);\n          if (t < u) continue;\n          if (t > v) break;\n          z.push(t);\n        }\n      } else for (; i <= j; ++i) {\n        for (k = base - 1; k >= 1; --k) {\n          t = i > 0 ? k / pows(-i) : k * pows(i);\n          if (t < u) continue;\n          if (t > v) break;\n          z.push(t);\n        }\n      }\n      if (z.length * 2 < n) z = ticks(u, v, n);\n    } else {\n      z = ticks(i, j, Math.min(j - i, n)).map(pows);\n    }\n    return r ? z.reverse() : z;\n  };\n\n  scale.tickFormat = (count, specifier) => {\n    if (count == null) count = 10;\n    if (specifier == null) specifier = base === 10 ? \"s\" : \",\";\n    if (typeof specifier !== \"function\") {\n      if (!(base % 1) && (specifier = formatSpecifier(specifier)).precision == null) specifier.trim = true;\n      specifier = format(specifier);\n    }\n    if (count === Infinity) return specifier;\n    const k = Math.max(1, base * count / scale.ticks().length); // TODO fast estimate?\n    return d => {\n      let i = d / pows(Math.round(logs(d)));\n      if (i * base < base - 0.5) i *= base;\n      return i <= k ? specifier(d) : \"\";\n    };\n  };\n\n  scale.nice = () => {\n    return domain(nice(domain(), {\n      floor: x => pows(Math.floor(logs(x))),\n      ceil: x => pows(Math.ceil(logs(x)))\n    }));\n  };\n\n  return scale;\n}\n\nexport default function log() {\n  const scale = loggish(transformer()).domain([1, 10]);\n  scale.copy = () => copy(scale, log()).base(scale.base());\n  initRange.apply(scale, arguments);\n  return scale;\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}