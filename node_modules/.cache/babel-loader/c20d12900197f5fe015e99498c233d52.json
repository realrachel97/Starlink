{"ast":null,"code":"import { geoProjectionMutator as projectionMutator } from \"d3-geo\";\nimport { abs, asin, atan2, cos, degrees, epsilon, halfPi, log, radians, sin, sqrt, tan } from \"./math.js\";\nexport function airyRaw(beta) {\n  var tanBeta_2 = tan(beta / 2),\n      b = 2 * log(cos(beta / 2)) / (tanBeta_2 * tanBeta_2);\n\n  function forward(x, y) {\n    var cosx = cos(x),\n        cosy = cos(y),\n        siny = sin(y),\n        cosz = cosy * cosx,\n        k = -((1 - cosz ? log((1 + cosz) / 2) / (1 - cosz) : -0.5) + b / (1 + cosz));\n    return [k * cosy * sin(x), k * siny];\n  }\n\n  forward.invert = function (x, y) {\n    var r = sqrt(x * x + y * y),\n        z = -beta / 2,\n        i = 50,\n        delta;\n    if (!r) return [0, 0];\n\n    do {\n      var z_2 = z / 2,\n          cosz_2 = cos(z_2),\n          sinz_2 = sin(z_2),\n          tanz_2 = sinz_2 / cosz_2,\n          lnsecz_2 = -log(abs(cosz_2));\n      z -= delta = (2 / tanz_2 * lnsecz_2 - b * tanz_2 - r) / (-lnsecz_2 / (sinz_2 * sinz_2) + 1 - b / (2 * cosz_2 * cosz_2)) * (cosz_2 < 0 ? 0.7 : 1);\n    } while (abs(delta) > epsilon && --i > 0);\n\n    var sinz = sin(z);\n    return [atan2(x * sinz, r * cos(z)), asin(y * sinz / r)];\n  };\n\n  return forward;\n}\nexport default function () {\n  var beta = halfPi,\n      m = projectionMutator(airyRaw),\n      p = m(beta);\n\n  p.radius = function (_) {\n    return arguments.length ? m(beta = _ * radians) : beta * degrees;\n  };\n\n  return p.scale(179.976).clipAngle(147);\n}","map":{"version":3,"names":["geoProjectionMutator","projectionMutator","abs","asin","atan2","cos","degrees","epsilon","halfPi","log","radians","sin","sqrt","tan","airyRaw","beta","tanBeta_2","b","forward","x","y","cosx","cosy","siny","cosz","k","invert","r","z","i","delta","z_2","cosz_2","sinz_2","tanz_2","lnsecz_2","sinz","m","p","radius","_","arguments","length","scale","clipAngle"],"sources":["D:/LaiOfferProjects/starlink/starlink/node_modules/d3-geo-projection/src/airy.js"],"sourcesContent":["import {geoProjectionMutator as projectionMutator} from \"d3-geo\";\nimport {abs, asin, atan2, cos, degrees, epsilon, halfPi, log, radians, sin, sqrt, tan} from \"./math.js\";\n\nexport function airyRaw(beta) {\n  var tanBeta_2 = tan(beta / 2),\n      b = 2 * log(cos(beta / 2)) / (tanBeta_2 * tanBeta_2);\n\n  function forward(x, y) {\n    var cosx = cos(x),\n        cosy = cos(y),\n        siny = sin(y),\n        cosz = cosy * cosx,\n        k = -((1 - cosz ? log((1 + cosz) / 2) / (1 - cosz) : -0.5) + b / (1 + cosz));\n    return [k * cosy * sin(x), k * siny];\n  }\n\n  forward.invert = function(x, y) {\n    var r = sqrt(x * x + y * y),\n        z = -beta / 2,\n        i = 50, delta;\n    if (!r) return [0, 0];\n    do {\n      var z_2 = z / 2,\n          cosz_2 = cos(z_2),\n          sinz_2 = sin(z_2),\n          tanz_2 = sinz_2 / cosz_2,\n          lnsecz_2 = -log(abs(cosz_2));\n      z -= delta = (2 / tanz_2 * lnsecz_2 - b * tanz_2 - r) / (-lnsecz_2 / (sinz_2 * sinz_2) + 1 - b / (2 * cosz_2 * cosz_2)) * (cosz_2 < 0 ? 0.7 : 1);\n    } while (abs(delta) > epsilon && --i > 0);\n    var sinz = sin(z);\n    return [atan2(x * sinz, r * cos(z)), asin(y * sinz / r)];\n  };\n\n  return forward;\n}\n\nexport default function() {\n  var beta = halfPi,\n      m = projectionMutator(airyRaw),\n      p = m(beta);\n\n  p.radius = function(_) {\n    return arguments.length ? m(beta = _ * radians) : beta * degrees;\n  };\n\n  return p\n      .scale(179.976)\n      .clipAngle(147);\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}