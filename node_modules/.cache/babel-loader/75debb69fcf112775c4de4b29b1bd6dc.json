{"ast":null,"code":"import { geoAzimuthalEqualAreaRaw as azimuthalEqualAreaRaw, geoProjectionMutator as projectionMutator } from \"d3-geo\";\nimport { asin, cos, sin } from \"./math.js\";\nexport function hammerRaw(A, B) {\n  if (arguments.length < 2) B = A;\n  if (B === 1) return azimuthalEqualAreaRaw;\n  if (B === Infinity) return hammerQuarticAuthalicRaw;\n\n  function forward(lambda, phi) {\n    var coordinates = azimuthalEqualAreaRaw(lambda / B, phi);\n    coordinates[0] *= A;\n    return coordinates;\n  }\n\n  forward.invert = function (x, y) {\n    var coordinates = azimuthalEqualAreaRaw.invert(x / A, y);\n    coordinates[0] *= B;\n    return coordinates;\n  };\n\n  return forward;\n}\n\nfunction hammerQuarticAuthalicRaw(lambda, phi) {\n  return [lambda * cos(phi) / cos(phi /= 2), 2 * sin(phi)];\n}\n\nhammerQuarticAuthalicRaw.invert = function (x, y) {\n  var phi = 2 * asin(y / 2);\n  return [x * cos(phi / 2) / cos(phi), phi];\n};\n\nexport default function () {\n  var B = 2,\n      m = projectionMutator(hammerRaw),\n      p = m(B);\n\n  p.coefficient = function (_) {\n    if (!arguments.length) return B;\n    return m(B = +_);\n  };\n\n  return p.scale(169.529);\n}","map":{"version":3,"names":["geoAzimuthalEqualAreaRaw","azimuthalEqualAreaRaw","geoProjectionMutator","projectionMutator","asin","cos","sin","hammerRaw","A","B","arguments","length","Infinity","hammerQuarticAuthalicRaw","forward","lambda","phi","coordinates","invert","x","y","m","p","coefficient","_","scale"],"sources":["D:/LaiOfferProjects/starlink/starlink/node_modules/d3-geo-projection/src/hammer.js"],"sourcesContent":["import {geoAzimuthalEqualAreaRaw as azimuthalEqualAreaRaw, geoProjectionMutator as projectionMutator} from \"d3-geo\";\nimport {asin, cos, sin} from \"./math.js\";\n\nexport function hammerRaw(A, B) {\n  if (arguments.length < 2) B = A;\n  if (B === 1) return azimuthalEqualAreaRaw;\n  if (B === Infinity) return hammerQuarticAuthalicRaw;\n\n  function forward(lambda, phi) {\n    var coordinates = azimuthalEqualAreaRaw(lambda / B, phi);\n    coordinates[0] *= A;\n    return coordinates;\n  }\n\n  forward.invert = function(x, y) {\n    var coordinates = azimuthalEqualAreaRaw.invert(x / A, y);\n    coordinates[0] *= B;\n    return coordinates;\n  };\n\n  return forward;\n}\n\nfunction hammerQuarticAuthalicRaw(lambda, phi) {\n  return [\n    lambda * cos(phi) / cos(phi /= 2),\n    2 * sin(phi)\n  ];\n}\n\nhammerQuarticAuthalicRaw.invert = function(x, y) {\n  var phi = 2 * asin(y / 2);\n  return [\n    x * cos(phi / 2) / cos(phi),\n    phi\n  ];\n};\n\nexport default function() {\n  var B = 2,\n      m = projectionMutator(hammerRaw),\n      p = m(B);\n\n  p.coefficient = function(_) {\n    if (!arguments.length) return B;\n    return m(B = +_);\n  };\n\n  return p\n    .scale(169.529);\n}\n"],"mappings":"AAAA,SAAQA,wBAAwB,IAAIC,qBAApC,EAA2DC,oBAAoB,IAAIC,iBAAnF,QAA2G,QAA3G;AACA,SAAQC,IAAR,EAAcC,GAAd,EAAmBC,GAAnB,QAA6B,WAA7B;AAEA,OAAO,SAASC,SAAT,CAAmBC,CAAnB,EAAsBC,CAAtB,EAAyB;EAC9B,IAAIC,SAAS,CAACC,MAAV,GAAmB,CAAvB,EAA0BF,CAAC,GAAGD,CAAJ;EAC1B,IAAIC,CAAC,KAAK,CAAV,EAAa,OAAOR,qBAAP;EACb,IAAIQ,CAAC,KAAKG,QAAV,EAAoB,OAAOC,wBAAP;;EAEpB,SAASC,OAAT,CAAiBC,MAAjB,EAAyBC,GAAzB,EAA8B;IAC5B,IAAIC,WAAW,GAAGhB,qBAAqB,CAACc,MAAM,GAAGN,CAAV,EAAaO,GAAb,CAAvC;IACAC,WAAW,CAAC,CAAD,CAAX,IAAkBT,CAAlB;IACA,OAAOS,WAAP;EACD;;EAEDH,OAAO,CAACI,MAAR,GAAiB,UAASC,CAAT,EAAYC,CAAZ,EAAe;IAC9B,IAAIH,WAAW,GAAGhB,qBAAqB,CAACiB,MAAtB,CAA6BC,CAAC,GAAGX,CAAjC,EAAoCY,CAApC,CAAlB;IACAH,WAAW,CAAC,CAAD,CAAX,IAAkBR,CAAlB;IACA,OAAOQ,WAAP;EACD,CAJD;;EAMA,OAAOH,OAAP;AACD;;AAED,SAASD,wBAAT,CAAkCE,MAAlC,EAA0CC,GAA1C,EAA+C;EAC7C,OAAO,CACLD,MAAM,GAAGV,GAAG,CAACW,GAAD,CAAZ,GAAoBX,GAAG,CAACW,GAAG,IAAI,CAAR,CADlB,EAEL,IAAIV,GAAG,CAACU,GAAD,CAFF,CAAP;AAID;;AAEDH,wBAAwB,CAACK,MAAzB,GAAkC,UAASC,CAAT,EAAYC,CAAZ,EAAe;EAC/C,IAAIJ,GAAG,GAAG,IAAIZ,IAAI,CAACgB,CAAC,GAAG,CAAL,CAAlB;EACA,OAAO,CACLD,CAAC,GAAGd,GAAG,CAACW,GAAG,GAAG,CAAP,CAAP,GAAmBX,GAAG,CAACW,GAAD,CADjB,EAELA,GAFK,CAAP;AAID,CAND;;AAQA,eAAe,YAAW;EACxB,IAAIP,CAAC,GAAG,CAAR;EAAA,IACIY,CAAC,GAAGlB,iBAAiB,CAACI,SAAD,CADzB;EAAA,IAEIe,CAAC,GAAGD,CAAC,CAACZ,CAAD,CAFT;;EAIAa,CAAC,CAACC,WAAF,GAAgB,UAASC,CAAT,EAAY;IAC1B,IAAI,CAACd,SAAS,CAACC,MAAf,EAAuB,OAAOF,CAAP;IACvB,OAAOY,CAAC,CAACZ,CAAC,GAAG,CAACe,CAAN,CAAR;EACD,CAHD;;EAKA,OAAOF,CAAC,CACLG,KADI,CACE,OADF,CAAP;AAED"},"metadata":{},"sourceType":"module"}