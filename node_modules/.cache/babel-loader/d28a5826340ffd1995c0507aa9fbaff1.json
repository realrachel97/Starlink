{"ast":null,"code":"import { geoCentroid as centroid, geoGnomonic as gnomonic } from \"d3-geo\";\nimport { asin, atan2, cos, degrees, max, min, pi, radians, sin } from \"../math.js\";\nimport polyhedral from \"./index.js\";\nimport octahedron from \"./octahedron.js\";\nexport default function (faceProjection) {\n  faceProjection = faceProjection || function (face) {\n    var c = face.length === 6 ? centroid({\n      type: \"MultiPoint\",\n      coordinates: face\n    }) : face[0];\n    return gnomonic().scale(1).translate([0, 0]).rotate([-c[0], -c[1]]);\n  };\n\n  var w5 = octahedron.map(function (face) {\n    var xyz = face.map(cartesian),\n        n = xyz.length,\n        a = xyz[n - 1],\n        b,\n        hexagon = [];\n\n    for (var i = 0; i < n; ++i) {\n      b = xyz[i];\n      hexagon.push(spherical([a[0] * 0.9486832980505138 + b[0] * 0.31622776601683794, a[1] * 0.9486832980505138 + b[1] * 0.31622776601683794, a[2] * 0.9486832980505138 + b[2] * 0.31622776601683794]), spherical([b[0] * 0.9486832980505138 + a[0] * 0.31622776601683794, b[1] * 0.9486832980505138 + a[1] * 0.31622776601683794, b[2] * 0.9486832980505138 + a[2] * 0.31622776601683794]));\n      a = b;\n    }\n\n    return hexagon;\n  });\n  var cornerNormals = [];\n  var parents = [-1, 0, 0, 1, 0, 1, 4, 5];\n  w5.forEach(function (hexagon, j) {\n    var face = octahedron[j],\n        n = face.length,\n        normals = cornerNormals[j] = [];\n\n    for (var i = 0; i < n; ++i) {\n      w5.push([face[i], hexagon[(i * 2 + 2) % (2 * n)], hexagon[(i * 2 + 1) % (2 * n)]]);\n      parents.push(j);\n      normals.push(cross(cartesian(hexagon[(i * 2 + 2) % (2 * n)]), cartesian(hexagon[(i * 2 + 1) % (2 * n)])));\n    }\n  });\n  var faces = w5.map(function (face) {\n    return {\n      project: faceProjection(face),\n      face: face\n    };\n  });\n  parents.forEach(function (d, i) {\n    var parent = faces[d];\n    parent && (parent.children || (parent.children = [])).push(faces[i]);\n  });\n\n  function face(lambda, phi) {\n    var cosphi = cos(phi),\n        p = [cosphi * cos(lambda), cosphi * sin(lambda), sin(phi)];\n    var hexagon = lambda < -pi / 2 ? phi < 0 ? 6 : 4 : lambda < 0 ? phi < 0 ? 2 : 0 : lambda < pi / 2 ? phi < 0 ? 3 : 1 : phi < 0 ? 7 : 5;\n    var n = cornerNormals[hexagon];\n    return faces[dot(n[0], p) < 0 ? 8 + 3 * hexagon : dot(n[1], p) < 0 ? 8 + 3 * hexagon + 1 : dot(n[2], p) < 0 ? 8 + 3 * hexagon + 2 : hexagon];\n  }\n\n  return polyhedral(faces[0], face).angle(-30).scale(110.625).center([0, 45]);\n}\n\nfunction dot(a, b) {\n  for (var i = 0, n = a.length, s = 0; i < n; ++i) {\n    s += a[i] * b[i];\n  }\n\n  return s;\n}\n\nfunction cross(a, b) {\n  return [a[1] * b[2] - a[2] * b[1], a[2] * b[0] - a[0] * b[2], a[0] * b[1] - a[1] * b[0]];\n} // Converts 3D Cartesian to spherical coordinates (degrees).\n\n\nfunction spherical(cartesian) {\n  return [atan2(cartesian[1], cartesian[0]) * degrees, asin(max(-1, min(1, cartesian[2]))) * degrees];\n} // Converts spherical coordinates (degrees) to 3D Cartesian.\n\n\nfunction cartesian(coordinates) {\n  var lambda = coordinates[0] * radians,\n      phi = coordinates[1] * radians,\n      cosphi = cos(phi);\n  return [cosphi * cos(lambda), cosphi * sin(lambda), sin(phi)];\n}","map":{"version":3,"names":["geoCentroid","centroid","geoGnomonic","gnomonic","asin","atan2","cos","degrees","max","min","pi","radians","sin","polyhedral","octahedron","faceProjection","face","c","length","type","coordinates","scale","translate","rotate","w5","map","xyz","cartesian","n","a","b","hexagon","i","push","spherical","cornerNormals","parents","forEach","j","normals","cross","faces","project","d","parent","children","lambda","phi","cosphi","p","dot","angle","center","s"],"sources":["D:/LaiOfferProjects/starlink/starlink/node_modules/d3-geo-projection/src/polyhedral/waterman.js"],"sourcesContent":["import {geoCentroid as centroid, geoGnomonic as gnomonic} from \"d3-geo\";\nimport {asin, atan2, cos, degrees, max, min, pi, radians, sin} from \"../math.js\";\nimport polyhedral from \"./index.js\";\nimport octahedron from \"./octahedron.js\";\n\nexport default function(faceProjection) {\n\n  faceProjection = faceProjection || function(face) {\n    var c = face.length === 6 ? centroid({type: \"MultiPoint\", coordinates: face}) : face[0];\n    return gnomonic().scale(1).translate([0, 0]).rotate([-c[0], -c[1]]);\n  };\n\n  var w5 = octahedron.map(function(face) {\n    var xyz = face.map(cartesian),\n        n = xyz.length,\n        a = xyz[n - 1],\n        b,\n        hexagon = [];\n    for (var i = 0; i < n; ++i) {\n      b = xyz[i];\n      hexagon.push(spherical([\n        a[0] * 0.9486832980505138 + b[0] * 0.31622776601683794,\n        a[1] * 0.9486832980505138 + b[1] * 0.31622776601683794,\n        a[2] * 0.9486832980505138 + b[2] * 0.31622776601683794\n      ]), spherical([\n        b[0] * 0.9486832980505138 + a[0] * 0.31622776601683794,\n        b[1] * 0.9486832980505138 + a[1] * 0.31622776601683794,\n        b[2] * 0.9486832980505138 + a[2] * 0.31622776601683794\n      ]));\n      a = b;\n    }\n    return hexagon;\n  });\n\n  var cornerNormals = [];\n\n  var parents = [-1, 0, 0, 1, 0, 1, 4, 5];\n\n  w5.forEach(function(hexagon, j) {\n    var face = octahedron[j],\n        n = face.length,\n        normals = cornerNormals[j] = [];\n    for (var i = 0; i < n; ++i) {\n      w5.push([\n        face[i],\n        hexagon[(i * 2 + 2) % (2 * n)],\n        hexagon[(i * 2 + 1) % (2 * n)]\n      ]);\n      parents.push(j);\n      normals.push(cross(\n        cartesian(hexagon[(i * 2 + 2) % (2 * n)]),\n        cartesian(hexagon[(i * 2 + 1) % (2 * n)])\n      ));\n    }\n  });\n\n  var faces = w5.map(function(face) {\n    return {\n      project: faceProjection(face),\n      face: face\n    };\n  });\n\n  parents.forEach(function(d, i) {\n    var parent = faces[d];\n    parent && (parent.children || (parent.children = [])).push(faces[i]);\n  });\n\n  function face(lambda, phi) {\n    var cosphi = cos(phi),\n        p = [cosphi * cos(lambda), cosphi * sin(lambda), sin(phi)];\n\n    var hexagon = lambda < -pi / 2 ? phi < 0 ? 6 : 4\n        : lambda < 0 ? phi < 0 ? 2 : 0\n        : lambda < pi / 2 ? phi < 0 ? 3 : 1\n        : phi < 0 ? 7 : 5;\n\n    var n = cornerNormals[hexagon];\n\n    return faces[dot(n[0], p) < 0 ? 8 + 3 * hexagon\n        : dot(n[1], p) < 0 ? 8 + 3 * hexagon + 1\n        : dot(n[2], p) < 0 ? 8 + 3 * hexagon + 2\n        : hexagon];\n  }\n\n  return polyhedral(faces[0], face)\n      .angle(-30)\n      .scale(110.625)\n      .center([0,45]);\n}\n\nfunction dot(a, b) {\n  for (var i = 0, n = a.length, s = 0; i < n; ++i) s += a[i] * b[i];\n  return s;\n}\n\nfunction cross(a, b) {\n  return [\n    a[1] * b[2] - a[2] * b[1],\n    a[2] * b[0] - a[0] * b[2],\n    a[0] * b[1] - a[1] * b[0]\n  ];\n}\n\n// Converts 3D Cartesian to spherical coordinates (degrees).\nfunction spherical(cartesian) {\n  return [\n    atan2(cartesian[1], cartesian[0]) * degrees,\n    asin(max(-1, min(1, cartesian[2]))) * degrees\n  ];\n}\n\n// Converts spherical coordinates (degrees) to 3D Cartesian.\nfunction cartesian(coordinates) {\n  var lambda = coordinates[0] * radians,\n      phi = coordinates[1] * radians,\n      cosphi = cos(phi);\n  return [\n    cosphi * cos(lambda),\n    cosphi * sin(lambda),\n    sin(phi)\n  ];\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}