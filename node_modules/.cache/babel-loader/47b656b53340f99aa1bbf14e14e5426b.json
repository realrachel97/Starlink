{"ast":null,"code":"import { geoProjection as projection } from \"d3-geo\";\nimport { cos } from \"./math.js\";\nexport function sinusoidalRaw(lambda, phi) {\n  return [lambda * cos(phi), phi];\n}\n\nsinusoidalRaw.invert = function (x, y) {\n  return [x / cos(y), y];\n};\n\nexport default function () {\n  return projection(sinusoidalRaw).scale(152.63);\n}","map":{"version":3,"names":["geoProjection","projection","cos","sinusoidalRaw","lambda","phi","invert","x","y","scale"],"sources":["D:/LaiOfferProjects/starlink/starlink/node_modules/d3-geo-projection/src/sinusoidal.js"],"sourcesContent":["import {geoProjection as projection} from \"d3-geo\";\nimport {cos} from \"./math.js\";\n\nexport function sinusoidalRaw(lambda, phi) {\n  return [lambda * cos(phi), phi];\n}\n\nsinusoidalRaw.invert = function(x, y) {\n  return [x / cos(y), y];\n};\n\nexport default function() {\n  return projection(sinusoidalRaw)\n      .scale(152.63);\n}\n"],"mappings":"AAAA,SAAQA,aAAa,IAAIC,UAAzB,QAA0C,QAA1C;AACA,SAAQC,GAAR,QAAkB,WAAlB;AAEA,OAAO,SAASC,aAAT,CAAuBC,MAAvB,EAA+BC,GAA/B,EAAoC;EACzC,OAAO,CAACD,MAAM,GAAGF,GAAG,CAACG,GAAD,CAAb,EAAoBA,GAApB,CAAP;AACD;;AAEDF,aAAa,CAACG,MAAd,GAAuB,UAASC,CAAT,EAAYC,CAAZ,EAAe;EACpC,OAAO,CAACD,CAAC,GAAGL,GAAG,CAACM,CAAD,CAAR,EAAaA,CAAb,CAAP;AACD,CAFD;;AAIA,eAAe,YAAW;EACxB,OAAOP,UAAU,CAACE,aAAD,CAAV,CACFM,KADE,CACI,MADJ,CAAP;AAED"},"metadata":{},"sourceType":"module"}