{"ast":null,"code":"import { range } from \"d3-array\";\nimport { geoStream, geoProjectionMutator as projectionMutator } from \"d3-geo\";\nimport { collignonRaw } from \"./collignon.js\";\nimport { cylindricalEqualAreaRaw } from \"./cylindricalEqualArea.js\";\nimport { abs, asin, degrees, epsilon, floor, max, min, pi, radians, sqrtPi, tau } from \"./math.js\";\nvar K = 3,\n    healpixParallel = asin(1 - 1 / K) * degrees,\n    healpixLambert = cylindricalEqualAreaRaw(0);\nexport function healpixRaw(H) {\n  var phi0 = healpixParallel * radians,\n      dx = collignonRaw(pi, phi0)[0] - collignonRaw(-pi, phi0)[0],\n      y0 = healpixLambert(0, phi0)[1],\n      y1 = collignonRaw(0, phi0)[1],\n      dy1 = sqrtPi - y1,\n      k = tau / H,\n      w = 4 / tau,\n      h = y0 + dy1 * dy1 * 4 / tau;\n\n  function forward(lambda, phi) {\n    var point,\n        phi2 = abs(phi);\n\n    if (phi2 > phi0) {\n      var i = min(H - 1, max(0, floor((lambda + pi) / k)));\n      lambda += pi * (H - 1) / H - i * k;\n      point = collignonRaw(lambda, phi2);\n      point[0] = point[0] * tau / dx - tau * (H - 1) / (2 * H) + i * tau / H;\n      point[1] = y0 + (point[1] - y1) * 4 * dy1 / tau;\n      if (phi < 0) point[1] = -point[1];\n    } else {\n      point = healpixLambert(lambda, phi);\n    }\n\n    point[0] *= w, point[1] /= h;\n    return point;\n  }\n\n  forward.invert = function (x, y) {\n    x /= w, y *= h;\n    var y2 = abs(y);\n\n    if (y2 > y0) {\n      var i = min(H - 1, max(0, floor((x + pi) / k)));\n      x = (x + pi * (H - 1) / H - i * k) * dx / tau;\n      var point = collignonRaw.invert(x, 0.25 * (y2 - y0) * tau / dy1 + y1);\n      point[0] -= pi * (H - 1) / H - i * k;\n      if (y < 0) point[1] = -point[1];\n      return point;\n    }\n\n    return healpixLambert.invert(x, y);\n  };\n\n  return forward;\n}\n\nfunction sphereTop(x, i) {\n  return [x, i & 1 ? 90 - epsilon : healpixParallel];\n}\n\nfunction sphereBottom(x, i) {\n  return [x, i & 1 ? -90 + epsilon : -healpixParallel];\n}\n\nfunction sphereNudge(d) {\n  return [d[0] * (1 - epsilon), d[1]];\n}\n\nfunction sphere(step) {\n  var c = [].concat(range(-180, 180 + step / 2, step).map(sphereTop), range(180, -180 - step / 2, -step).map(sphereBottom));\n  return {\n    type: \"Polygon\",\n    coordinates: [step === 180 ? c.map(sphereNudge) : c]\n  };\n}\n\nexport default function () {\n  var H = 4,\n      m = projectionMutator(healpixRaw),\n      p = m(H),\n      stream_ = p.stream;\n\n  p.lobes = function (_) {\n    return arguments.length ? m(H = +_) : H;\n  };\n\n  p.stream = function (stream) {\n    var rotate = p.rotate(),\n        rotateStream = stream_(stream),\n        sphereStream = (p.rotate([0, 0]), stream_(stream));\n    p.rotate(rotate);\n\n    rotateStream.sphere = function () {\n      geoStream(sphere(180 / H), sphereStream);\n    };\n\n    return rotateStream;\n  };\n\n  return p.scale(239.75);\n}","map":{"version":3,"names":["range","geoStream","geoProjectionMutator","projectionMutator","collignonRaw","cylindricalEqualAreaRaw","abs","asin","degrees","epsilon","floor","max","min","pi","radians","sqrtPi","tau","K","healpixParallel","healpixLambert","healpixRaw","H","phi0","dx","y0","y1","dy1","k","w","h","forward","lambda","phi","point","phi2","i","invert","x","y","y2","sphereTop","sphereBottom","sphereNudge","d","sphere","step","c","concat","map","type","coordinates","m","p","stream_","stream","lobes","_","arguments","length","rotate","rotateStream","sphereStream","scale"],"sources":["D:/LaiOfferProjects/starlink/starlink/node_modules/d3-geo-projection/src/healpix.js"],"sourcesContent":["import {range} from \"d3-array\";\nimport {geoStream, geoProjectionMutator as projectionMutator} from \"d3-geo\";\nimport {collignonRaw} from \"./collignon.js\";\nimport {cylindricalEqualAreaRaw} from \"./cylindricalEqualArea.js\";\nimport {abs, asin, degrees, epsilon, floor, max, min, pi, radians, sqrtPi, tau} from \"./math.js\";\n\nvar K = 3,\n    healpixParallel = asin(1 - 1 / K) * degrees,\n    healpixLambert = cylindricalEqualAreaRaw(0);\n\nexport function healpixRaw(H) {\n  var phi0 = healpixParallel * radians,\n      dx = collignonRaw(pi, phi0)[0] - collignonRaw(-pi, phi0)[0],\n      y0 = healpixLambert(0, phi0)[1],\n      y1 = collignonRaw(0, phi0)[1],\n      dy1 = sqrtPi - y1,\n      k = tau / H,\n      w = 4 / tau,\n      h = y0 + (dy1 * dy1 * 4) / tau;\n\n  function forward(lambda, phi) {\n    var point,\n        phi2 = abs(phi);\n    if (phi2 > phi0) {\n      var i = min(H - 1, max(0, floor((lambda + pi) / k)));\n      lambda += pi * (H - 1) / H - i * k;\n      point = collignonRaw(lambda, phi2);\n      point[0] = point[0] * tau / dx - tau * (H - 1) / (2 * H) + i * tau / H;\n      point[1] = y0 + (point[1] - y1) * 4 * dy1 / tau;\n      if (phi < 0) point[1] = -point[1];\n    } else {\n      point = healpixLambert(lambda, phi);\n    }\n    point[0] *= w, point[1] /= h;\n    return point;\n  }\n\n  forward.invert = function(x, y) {\n    x /= w, y *= h;\n    var y2 = abs(y);\n    if (y2 > y0) {\n      var i = min(H - 1, max(0, floor((x + pi) / k)));\n      x = (x + pi * (H - 1) / H - i * k) * dx / tau;\n      var point = collignonRaw.invert(x, 0.25 * (y2 - y0) * tau / dy1 + y1);\n      point[0] -= pi * (H - 1) / H - i * k;\n      if (y < 0) point[1] = -point[1];\n      return point;\n    }\n    return healpixLambert.invert(x, y);\n  };\n\n  return forward;\n}\n\nfunction sphereTop(x, i) {\n  return [x, i & 1 ? 90 - epsilon : healpixParallel];\n}\n\nfunction sphereBottom(x, i) {\n  return [x, i & 1 ? -90 + epsilon : -healpixParallel];\n}\n\nfunction sphereNudge(d) {\n  return [d[0] * (1 - epsilon), d[1]];\n}\n\nfunction sphere(step) {\n  var c = [].concat(\n    range(-180, 180 + step / 2, step).map(sphereTop),\n    range(180, -180 - step / 2, -step).map(sphereBottom)\n  );\n  return {\n    type: \"Polygon\",\n    coordinates: [step === 180 ? c.map(sphereNudge) : c]\n  };\n}\n\nexport default function() {\n  var H = 4,\n      m = projectionMutator(healpixRaw),\n      p = m(H),\n      stream_ = p.stream;\n\n  p.lobes = function(_) {\n    return arguments.length ? m(H = +_) : H;\n  };\n\n  p.stream = function(stream) {\n    var rotate = p.rotate(),\n        rotateStream = stream_(stream),\n        sphereStream = (p.rotate([0, 0]), stream_(stream));\n    p.rotate(rotate);\n    rotateStream.sphere = function() { geoStream(sphere(180 / H), sphereStream); };\n    return rotateStream;\n  };\n\n  return p\n      .scale(239.75);\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}