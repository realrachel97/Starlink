{"ast":null,"code":"import { geoProjection as projection } from \"d3-geo\";\nimport { abs, epsilon, pi, sign } from \"./math.js\";\nexport function laskowskiRaw(lambda, phi) {\n  var lambda2 = lambda * lambda,\n      phi2 = phi * phi;\n  return [lambda * (0.975534 + phi2 * (-0.119161 + lambda2 * -0.0143059 + phi2 * -0.0547009)), phi * (1.00384 + lambda2 * (0.0802894 + phi2 * -0.02855 + lambda2 * 0.000199025) + phi2 * (0.0998909 + phi2 * -0.0491032))];\n}\n\nlaskowskiRaw.invert = function (x, y) {\n  var lambda = sign(x) * pi,\n      phi = y / 2,\n      i = 50;\n\n  do {\n    var lambda2 = lambda * lambda,\n        phi2 = phi * phi,\n        lambdaPhi = lambda * phi,\n        fx = lambda * (0.975534 + phi2 * (-0.119161 + lambda2 * -0.0143059 + phi2 * -0.0547009)) - x,\n        fy = phi * (1.00384 + lambda2 * (0.0802894 + phi2 * -0.02855 + lambda2 * 0.000199025) + phi2 * (0.0998909 + phi2 * -0.0491032)) - y,\n        deltaxDeltaLambda = 0.975534 - phi2 * (0.119161 + 3 * lambda2 * 0.0143059 + phi2 * 0.0547009),\n        deltaxDeltaPhi = -lambdaPhi * (2 * 0.119161 + 4 * 0.0547009 * phi2 + 2 * 0.0143059 * lambda2),\n        deltayDeltaLambda = lambdaPhi * (2 * 0.0802894 + 4 * 0.000199025 * lambda2 + 2 * -0.02855 * phi2),\n        deltayDeltaPhi = 1.00384 + lambda2 * (0.0802894 + 0.000199025 * lambda2) + phi2 * (3 * (0.0998909 - 0.02855 * lambda2) - 5 * 0.0491032 * phi2),\n        denominator = deltaxDeltaPhi * deltayDeltaLambda - deltayDeltaPhi * deltaxDeltaLambda,\n        deltaLambda = (fy * deltaxDeltaPhi - fx * deltayDeltaPhi) / denominator,\n        deltaPhi = (fx * deltayDeltaLambda - fy * deltaxDeltaLambda) / denominator;\n    lambda -= deltaLambda, phi -= deltaPhi;\n  } while ((abs(deltaLambda) > epsilon || abs(deltaPhi) > epsilon) && --i > 0);\n\n  return i && [lambda, phi];\n};\n\nexport default function () {\n  return projection(laskowskiRaw).scale(139.98);\n}","map":{"version":3,"names":["geoProjection","projection","abs","epsilon","pi","sign","laskowskiRaw","lambda","phi","lambda2","phi2","invert","x","y","i","lambdaPhi","fx","fy","deltaxDeltaLambda","deltaxDeltaPhi","deltayDeltaLambda","deltayDeltaPhi","denominator","deltaLambda","deltaPhi","scale"],"sources":["D:/LaiOfferProjects/starlink/starlink/node_modules/d3-geo-projection/src/laskowski.js"],"sourcesContent":["import {geoProjection as projection} from \"d3-geo\";\nimport {abs, epsilon, pi, sign} from \"./math.js\";\n\nexport function laskowskiRaw(lambda, phi) {\n  var lambda2 = lambda * lambda, phi2 = phi * phi;\n  return [\n    lambda * (0.975534 + phi2 * (-0.119161 + lambda2 * -0.0143059 + phi2 * -0.0547009)),\n    phi * (1.00384 + lambda2 * (0.0802894 + phi2 * -0.02855 + lambda2 * 0.000199025) + phi2 * (0.0998909 + phi2 * -0.0491032))\n  ];\n}\n\nlaskowskiRaw.invert = function(x, y) {\n  var lambda = sign(x) * pi,\n      phi = y / 2,\n      i = 50;\n  do {\n    var lambda2 = lambda * lambda,\n        phi2 = phi * phi,\n        lambdaPhi = lambda * phi,\n        fx = lambda * (0.975534 + phi2 * (-0.119161 + lambda2 * -0.0143059 + phi2 * -0.0547009)) - x,\n        fy = phi * (1.00384 + lambda2 * (0.0802894 + phi2 * -0.02855 + lambda2 * 0.000199025) + phi2 * (0.0998909 + phi2 * -0.0491032)) - y,\n        deltaxDeltaLambda = 0.975534 - phi2 * (0.119161 + 3 * lambda2 * 0.0143059 + phi2 * 0.0547009),\n        deltaxDeltaPhi = -lambdaPhi * (2 * 0.119161 + 4 * 0.0547009 * phi2 + 2 * 0.0143059 * lambda2),\n        deltayDeltaLambda = lambdaPhi * (2 * 0.0802894 + 4 * 0.000199025 * lambda2 + 2 * -0.02855 * phi2),\n        deltayDeltaPhi = 1.00384 + lambda2 * (0.0802894 + 0.000199025 * lambda2) + phi2 * (3 * (0.0998909 - 0.02855 * lambda2) - 5 * 0.0491032 * phi2),\n        denominator = deltaxDeltaPhi * deltayDeltaLambda - deltayDeltaPhi * deltaxDeltaLambda,\n        deltaLambda = (fy * deltaxDeltaPhi - fx * deltayDeltaPhi) / denominator,\n        deltaPhi = (fx * deltayDeltaLambda - fy * deltaxDeltaLambda) / denominator;\n    lambda -= deltaLambda, phi -= deltaPhi;\n  } while ((abs(deltaLambda) > epsilon || abs(deltaPhi) > epsilon) && --i > 0);\n  return i && [lambda, phi];\n};\n\nexport default function() {\n  return projection(laskowskiRaw)\n      .scale(139.98);\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}